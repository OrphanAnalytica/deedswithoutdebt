{"file_contents":{"README.md":{"content":"# Deeds Without Debt Newsletter Site\n\nA comprehensive newsletter website for alternative real estate investing strategies including tax deeds, tax liens, HOA foreclosures, and probate deals.\n\n## Managing State Guides\n\n### How to Add/Update a State\n\n1. **Edit the Index File**: Update `content/state-guides/index.yml`\n   - Add or modify state entry with required fields\n   - Ensure unique slug for each state\n\n2. **Create/Update MDX Content**: Create or edit `content/state-guides/{slug}.mdx`\n   - Use the slug from index.yml as the filename\n   - Include frontmatter with matching data\n\n### Required Fields\n\nEach state entry in `index.yml` must include:\n\n- **slug**: Unique identifier (lowercase, hyphens for spaces)\n- **name**: Full state name\n- **type**: Investment type (`deed`, `lien`, `hybrid`, or `tbd`)\n- **status**: Current status (`available`, `coming_soon`, or `research`)\n- **difficulty**: Investment difficulty (`beginner`, `intermediate`, `advanced`, or `tbd`)\n- **summary**: Brief description (1-2 sentences)\n- **auctions_per_year**: Frequency description\n- **format**: Auction format description\n- **last_updated**: Date in YYYY-MM-DD format\n\n### MDX Frontmatter Structure\n\nEach MDX file should start with:\n\n```yaml\n---\ntitle: \"{State} Tax Sales Guide\"\nslug: \"{slug}\"\ntype: \"deed|lien|hybrid|tbd\"\ndifficulty: \"beginner|intermediate|advanced|tbd\"\nstatus: \"available|coming_soon|research\"\nsummary: \"Brief description here\"\nlast_updated: \"YYYY-MM-DD\"\n---\n```\n\n### Status Workflow\n\n**Research → Coming Soon → Available**\n\n1. **research**: Initial state, needs verification\n   - Use `type: tbd` until verified\n   - Include placeholder content with \"To Verify\" notes\n   - Focus on gathering accurate information\n\n2. **coming_soon**: Content being written\n   - Type should be verified and set correctly\n   - Content outline prepared\n   - Publication scheduled\n\n3. **available**: Published and ready\n   - Complete content with accurate information\n   - Verified type (deed/lien/hybrid)\n   - Regular updates as needed\n\n### Editorial Notes\n\n**Important**: Always verify the investment type (deed/lien/hybrid) before changing from `tbd`. Each state's system can be complex and incorrect classification could mislead investors.\n\n**Content Guidelines**:\n- Provide accurate, actionable information\n- Include specific contact information when possible\n- Note any recent changes or unusual circumstances\n- Update content annually or when laws change\n\n**Research Sources**:\n- State statutes and tax codes\n- County websites and procedures\n- Local real estate professionals\n- Recent case studies and examples\n\n### File Organization\n\n```\ncontent/state-guides/\n├── index.yml          # Master state registry\n├── alaska.mdx         # Individual state guides\n├── texas.mdx\n├── florida.mdx\n└── ...\n```\n\n## Development\n\nBuilt with React, TypeScript, and modern web technologies. See package.json for complete dependencies.\n\n## Deployment\n\nConfigured for Replit Deployments with automatic builds and hosting.","size_bytes":3030},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Deeds Without Debt Newsletter Site\n\n## Overview\n\nThis is a newsletter website for \"Deeds Without Debt,\" focused on alternative real estate investing strategies including tax deeds, tax liens, HOA foreclosures, and probate deals. The site serves as both a content platform and newsletter subscription service, built as a fast, production-ready web application with modern technologies.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Routing**: Wouter for lightweight client-side routing\n- **Styling**: Tailwind CSS with custom CSS variables for brand theming\n- **UI Components**: Radix UI primitives with shadcn/ui component system\n- **State Management**: React Query (TanStack Query) for server state management\n- **Typography**: Google Fonts integration with DM Serif Text, Nunito Sans, and Montserrat\n\n### Backend Architecture\n- **Server**: Express.js with TypeScript\n- **Architecture Pattern**: Monorepo structure with shared types and schemas\n- **Development Setup**: Hot module replacement with Vite middleware integration\n- **Error Handling**: Centralized error handling with request/response logging\n- **Static Serving**: Development mode uses Vite middleware, production serves static files\n\n### Data Management\n- **Database ORM**: Drizzle ORM configured for PostgreSQL\n- **Database Provider**: Neon Database (serverless PostgreSQL)\n- **Schema Management**: Shared schema definitions between client and server\n- **Migrations**: Drizzle Kit for database migrations and schema management\n- **Content Strategy**: Currently uses static content with markdown-like structure, designed for future CMS integration\n\n### Design System\n- **Brand Colors**: Custom palette with forest green primary (#1B4332), cream background (#F5F5F0), and sage accents (#A3B18A)\n- **Component Library**: Comprehensive UI component system with consistent theming\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n- **Accessibility**: Built with WCAG AA compliance in mind using Radix UI primitives\n\n### Content Architecture\n- **Content Type**: Newsletter-style articles with metadata (tags, categories, dates)\n- **SEO Optimization**: Comprehensive meta tags, Open Graph, Twitter Cards, and JSON-LD schema\n- **Performance**: Optimized images, lazy loading, and minimal JavaScript bundles\n- **Newsletter Integration**: Form submission ready for external newsletter services\n\n## External Dependencies\n\n### Core Dependencies\n- **@neondatabase/serverless**: Serverless PostgreSQL database connection\n- **drizzle-orm**: Type-safe database ORM with PostgreSQL support\n- **@tanstack/react-query**: Server state management and caching\n- **express**: Node.js web framework for API endpoints\n\n### UI and Styling\n- **@radix-ui/***: Accessible UI primitive components (accordion, dialog, dropdown, etc.)\n- **tailwindcss**: Utility-first CSS framework\n- **class-variance-authority**: Utility for building variant-based component APIs\n- **embla-carousel-react**: Carousel component for content display\n\n### Development Tools\n- **vite**: Build tool and development server\n- **@vitejs/plugin-react**: React plugin for Vite\n- **tsx**: TypeScript execution environment for Node.js\n- **esbuild**: JavaScript bundler for production builds\n\n### Newsletter Service Integration\n- Ready for integration with services like Beehiiv, ConvertKit, or Mailchimp\n- Environment variable configuration for newsletter action URLs\n- Form submission handling with error management and user feedback\n\n### SEO and Analytics\n- Structured data markup for search engines\n- Open Graph and Twitter Card meta tags\n- RSS feed preparation for content syndication\n- Google Fonts preloading for performance optimization","size_bytes":3920},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n// Serve content directory for MDX files and YAML data\napp.use('/content', express.static('content'));\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2170},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport Archive from \"@/pages/Archive\";\nimport About from \"@/pages/About\";\nimport Subscribe from \"@/pages/Subscribe\";\nimport Resources from \"@/pages/Resources\";\nimport StateGuides from \"@/pages/StateGuides\";\nimport StateGuidePage from \"@/pages/StateGuidePage\";\nimport Layout from \"@/components/Layout\";\n\nfunction Router() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/archive\" component={Archive} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/subscribe\" component={Subscribe} />\n        <Route path=\"/resources\" component={Resources} />\n        <Route path=\"/state-guides\" component={StateGuides} />\n        <Route path=\"/state-guides/:slug\" component={StateGuidePage} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1391},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=DM+Serif+Text:ital,wght@0,400;1,400&family=Nunito+Sans:ital,wght@0,300;0,400;0,600;0,700;1,400&family=Montserrat:wght@500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Brand Colors */\n  --background: hsl(60, 9%, 96%); /* #F5F5F0 cream */\n  --foreground: hsl(0, 0%, 0%); /* #000000 black */\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(0, 0%, 0%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 0%);\n  --primary: hsl(154, 57%, 20%); /* #1B4332 forest green */\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(154, 42%, 29%); /* #2D6A4F medium green */\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(81, 17%, 61%); /* #A3B18A sage */\n  --muted-foreground: hsl(0, 0%, 20%);\n  --accent: hsl(81, 17%, 61%); /* #A3B18A sage */\n  --accent-foreground: hsl(0, 0%, 0%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(81, 17%, 61%);\n  --input: hsl(0, 0%, 100%);\n  --ring: hsl(154, 57%, 20%);\n  \n  /* Fonts */\n  --font-serif: 'DM Serif Text', serif;\n  --font-sans: 'Nunito Sans', sans-serif;\n  --font-mono: 'Montserrat', monospace;\n  \n  /* Other variables */\n  --radius: 0.5rem;\n  --chart-1: hsl(154, 57%, 20%);\n  --chart-2: hsl(154, 42%, 29%);\n  --chart-3: hsl(81, 17%, 61%);\n  --chart-4: hsl(147, 78%, 42%);\n  --chart-5: hsl(341, 75%, 51%);\n  --sidebar-background: hsl(60, 9%, 96%);\n  --sidebar-foreground: hsl(0, 0%, 0%);\n  --sidebar-primary: hsl(154, 57%, 20%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(81, 17%, 61%);\n  --sidebar-accent-foreground: hsl(0, 0%, 0%);\n  --sidebar-border: hsl(81, 17%, 61%);\n  --sidebar-ring: hsl(154, 57%, 20%);\n  --shadow-2xs: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00), 0px 1px 2px -1px hsl(154, 57%, 20% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00), 0px 1px 2px -1px hsl(154, 57%, 20% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00), 0px 2px 4px -1px hsl(154, 57%, 20% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00), 0px 4px 6px -1px hsl(154, 57%, 20% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00), 0px 8px 10px -1px hsl(154, 57%, 20% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(154, 57%, 20% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 7%, 91%);\n  --card: hsl(228, 10%, 10%);\n  --card-foreground: hsl(0, 0%, 85%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 7%, 91%);\n  --primary: hsl(154, 57%, 25%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(154, 42%, 35%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(81, 17%, 30%);\n  --muted-foreground: hsl(210, 4%, 46%);\n  --accent: hsl(81, 17%, 30%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(356, 90%, 54%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5%, 15%);\n  --input: hsl(207, 28%, 18%);\n  --ring: hsl(154, 57%, 25%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  .font-serif {\n    font-family: var(--font-serif);\n  }\n\n  .font-sans {\n    font-family: var(--font-sans);\n  }\n\n  .font-mono {\n    font-family: var(--font-mono);\n  }\n}\n\n@layer components {\n  .container {\n    @apply max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;\n  }\n  \n  .prose {\n    @apply text-foreground;\n  }\n  \n  .prose h1,\n  .prose h2,\n  .prose h3,\n  .prose h4,\n  .prose h5,\n  .prose h6 {\n    @apply font-serif text-foreground;\n  }\n  \n  .prose p {\n    @apply font-sans text-muted-foreground leading-relaxed;\n  }\n  \n  .prose a {\n    @apply text-primary hover:text-secondary transition-colors;\n  }\n}\n","size_bytes":3926},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"content/posts/alaska-tax-sales.md":{"content":"---\ntitle: \"How Alaska Tax Sales Work: September 2025 Borough Auction Guide\"\ndescription: \"Alaska's unique borough structure creates exceptional opportunities. Here's everything you need to know about the upcoming September auction.\"\ndate: \"2024-03-08\"\ntags: [\"Alaska\", \"Tax Sales\", \"State Guide\"]\ncover: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\nslug: \"alaska-tax-sales-guide\"\n---\n\n# How Alaska Tax Sales Work: September 2025 Borough Auction Guide\n\n*March 8, 2024 • 3 min read*\n\nAlaska operates differently than the lower 48 when it comes to tax sales, and those differences create exceptional opportunities for investors willing to do their homework. With several major auctions scheduled for September 2025, now's the time to understand how Alaska's unique system works.\n\n## Why Alaska is Different (And Better)\n\n**Borough-based system:** Alaska has 19 organized boroughs plus the unorganized borough, each with its own rules and auction schedules.\n\n**No redemption period:** Unlike many states, Alaska has no right of redemption after the tax deed sale. When you win, you own it immediately.\n\n**Lower competition:** The remote location and cash requirements eliminate most casual investors.\n\n**Higher returns:** Average ROI of 150-300% due to limited competition and undervalued properties.\n\n## September 2025 Auction Calendar\n\n### Matanuska-Susitna Borough\n**Date:** September 15, 2025  \n**Location:** Palmer Courthouse  \n**Properties:** 45 estimated  \n**Minimum bid:** $2,500  \n**Registration deadline:** September 8, 2025\n\n*Hot properties to watch:* Several residential lots in Wasilla area, plus remote cabin parcels.\n\n### Fairbanks North Star Borough  \n**Date:** September 22, 2025  \n**Location:** Fairbanks City Hall  \n**Properties:** 23 estimated  \n**Minimum bid:** $5,000  \n**Registration deadline:** September 15, 2025\n\n*What to expect:* Mix of residential and commercial properties, including potential mining claims.\n\n### Municipality of Anchorage\n**Date:** October 1, 2025  \n**Location:** Anchorage Assembly Chambers  \n**Properties:** 67 estimated  \n**Minimum bid:** $7,500  \n**Registration deadline:** September 24, 2025  \n\n*Investor focus:* Highest property values but also most competition. Several downtown commercial properties expected.\n\n## Alaska-Specific Considerations\n\n### Winterization Requirements\n**Critical deadline:** All structures must be winterized by October 1st annually. Budget $2,000-$5,000 per property for proper winterization including:\n- Draining all water systems\n- Insulating exposed pipes  \n- Installing heat tape where necessary\n- Securing against wildlife intrusion\n\n### Access Challenges\n**Remote properties:** Many parcels require bush plane, boat, or ATV access. Factor transportation costs into your ROI calculations.\n\n**Seasonal accessibility:** Some properties are only accessible during summer months, affecting inspection timelines and construction windows.\n\n### Environmental Factors\n**Permafrost:** Affects foundation requirements and utility installation costs.\n**Wildlife considerations:** Bear-proofing and wildlife management requirements in many areas.\n**Environmental assessments:** Required for any development on previously undeveloped land.\n\n## Due Diligence Checklist for Alaska Properties\n\n**Property access:** Verify year-round access routes and costs\n**Utility availability:** Many remote properties lack power, water, or sewer\n**Zoning compliance:** Borough zoning can be complex, especially for subdivisions  \n**Survey requirements:** Alaska requires detailed surveys for most transactions\n**Mineral rights:** Verify what's included with the surface rights\n**Native corporation lands:** Ensure no conflicts with Alaska Native Claims Settlement Act\n\n## Bidding Strategy\n\n**Start conservative:** Alaska properties can have hidden costs that novice investors miss\n**Factor in logistics:** Transportation, contractors, and materials cost more in Alaska\n**Understand local markets:** What sells in Anchorage won't necessarily work in rural areas\n**Have an exit strategy:** Know your end buyer before you bid\n\n## Registration Process\n\nEach borough requires advance registration with:\n- Photo identification\n- Proof of funds (cashier's check or wire transfer confirmation)\n- Completed bidder registration form\n- Registration fee (typically $100-$500)\n\n**Important:** Registration deadlines are strictly enforced. Late registrations are not accepted.\n\n## After the Sale\n\n**Immediate requirements:**\n- Full payment due within 24-48 hours\n- Deed recording fees\n- Property tax prorations\n- Immediate winterization planning\n\n## Is Alaska Right for You?\n\n**Best for investors who:**\n- Have experience with remote/rural properties\n- Can handle longer holding periods  \n- Have reliable contractor networks\n- Understand seasonal construction limitations\n\n**Not recommended if:**\n- You need quick flips\n- You're new to real estate investing\n- You can't travel to Alaska for inspections\n- You're working with limited capital\n\n## Next Steps\n\n1. **Research specific boroughs** where you want to invest\n2. **Plan inspection trips** for summer 2025 (June-August optimal)  \n3. **Establish banking relationships** in Alaska for faster transactions\n4. **Connect with local contractors** before you need them\n\nThe September 2025 Alaska auction season could be one of the best in recent years due to increased property tax delinquencies from the economic downturn. But success requires preparation and understanding of Alaska's unique challenges.\n\n---\n\n*Next issue: Complete breakdown of my Catron County subdivision deal, including before/after photos and exact profit calculations.*\n","size_bytes":5748},"content/posts/catron-county-case-study.md":{"content":"---\ntitle: \"Catron County Win: $17K to $120K in 18 Months\"\ndescription: \"My personal case study of turning a tax deed purchase into a massive profit by subdividing 5 acres and selling the cabin separately.\"\ndate: \"2024-03-01\"\ntags: [\"Case Study\", \"Profit\", \"New Mexico\"]\ncover: \"https://images.unsplash.com/photo-1449824913935-59a10b8d2000?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\nslug: \"catron-county-case-study\"\n---\n\n# Catron County Win: $17K to $120K in 18 Months\n\n*March 1, 2024 • 7 min read*\n\nThis is the deal that changed everything for me. A $17,000 tax deed purchase in remote New Mexico that I turned into $120,000 through strategic subdivision. Here's exactly how it happened, including the mistakes I made and lessons learned.\n\n## The Discovery\n\nI found this property while researching upcoming tax deed auctions in New Mexico. Catron County caught my attention because:\n\n- Sparsely populated (only 3,500 residents in the entire county)\n- Large properties often available\n- Minimal bidding competition\n- No online auction system (in-person only)\n\nThe property: **5 acres with a 1,200 sq ft cabin in Reserve, NM**\n\n## Pre-Auction Research\n\n**Step 1: Property records review**\n- Purchased GIS maps showing exact boundaries\n- Verified legal description matched tax records  \n- Confirmed no active liens beyond property taxes\n- Previous owner had paid $45,000 in 2018\n\n**Step 2: Physical inspection** \n- Drove 6 hours from Albuquerque to inspect in person\n- Cabin was weathered but structurally sound\n- Well water and septic system functional\n- Stunning mountain views on 3 sides\n\n**Step 3: Market analysis**\n- Similar cabins selling for $80,000-$120,000\n- Raw land averaging $8,000-$12,000 per acre\n- Key insight: No subdivided lots available in area\n\n**Step 4: Subdivision feasibility**\n- Called county planning department\n- Confirmed subdivision allowed with proper surveys\n- Minimum lot size: 1 acre\n- No major utility or road requirements\n\n## Auction Day\n\n**Date:** September 15, 2022  \n**Location:** Catron County Courthouse, Reserve, NM  \n**Competition:** Only 4 other bidders present\n\n**The bidding:**\n- Opened at $8,500 (unpaid taxes plus fees)\n- Two other bidders dropped out at $12,000\n- Final bidding between me and local rancher\n- Won at $17,000\n\n**Immediate costs:**\n- Winning bid: $17,000\n- Deed recording: $125\n- Wire transfer fees: $45\n- **Total acquisition cost: $17,170**\n\n## The 18-Month Journey\n\n### Months 1-3: Legal and Survey Work\n- Hired local surveyor: $3,200\n- Attorney for subdivision application: $1,800\n- County application fees: $750\n- **Total professional fees: $5,750**\n\n**Lesson learned:** Don't cheap out on the survey. My first surveyor made errors that delayed approval by 2 months.\n\n### Months 4-9: Subdivision Approval Process\nThe county planning process took longer than expected due to:\n- Environmental impact assessment required\n- Road easement documentation\n- Septic system compliance verification\n- Water rights confirmation\n\n**Additional costs during approval:**\n- Environmental consultant: $2,100\n- Road easement legal work: $900\n- Water rights documentation: $650\n- **Total regulatory costs: $3,650**\n\n### Months 10-12: Property Improvements\nWhile waiting for final subdivision approval, I invested in basic improvements:\n- Cabin roof repair: $4,200\n- Interior deep cleaning and minor repairs: $1,800\n- Driveway grading and gravel: $2,200\n- **Total improvement costs: $8,200**\n\n### Months 13-18: Marketing and Sales\n\n**The subdivision result:** 2 parcels\n- Parcel A: 1 acre with cabin and well\n- Parcel B: 4 acres of raw land with mountain views\n\n**Marketing strategy:**\n- Listed cabin parcel with local realtor (6% commission)\n- Sold raw land myself through Craigslist and Facebook\n- Targeted out-of-state buyers looking for recreation property\n\n**Sale #1 - The Cabin (Month 15)**\n- Listed at $89,000\n- Sold for $75,000 after 3 months on market\n- Realtor commission: $4,500\n- Closing costs: $1,200\n- **Net proceeds: $69,300**\n\n**Sale #2 - Raw Land (Month 18)**  \n- Listed at $50,000 ($12,500/acre)\n- Sold for $45,000 to Colorado buyer\n- No realtor commission (FSBO)\n- Closing costs: $800\n- **Net proceeds: $44,200**\n\n## Final Numbers\n\n### Total Investment\n- Acquisition cost: $17,170\n- Professional/legal fees: $5,750  \n- Regulatory costs: $3,650\n- Property improvements: $8,200\n- Marketing/holding costs: $2,500\n- **Total invested: $37,270**\n\n### Total Returns\n- Cabin sale net: $69,300\n- Raw land sale net: $44,200  \n- **Total gross proceeds: $113,500**\n\n### Net Profit: $76,230\n### ROI: 204% over 18 months\n### Annualized return: 136%\n\n## What Went Right\n\n**Thorough due diligence:** The subdivision research was key to identifying the value-add opportunity.\n\n**Patient capital:** Having 18 months of carrying costs budgeted allowed me to wait for proper subdivision approval.\n\n**Local relationships:** Building rapport with county staff and local contractors was essential.\n\n**Market timing:** Recreational property demand was strong during COVID remote work trend.\n\n## What Went Wrong (And Cost Me)\n\n**Survey delays:** Using a cheap surveyor initially cost me 2 months and $1,500 in rework.\n\n**Permitting timeline:** I underestimated regulatory approval time by 4 months.\n\n**Improvement overruns:** Cabin repairs cost 40% more than budgeted due to remote location.\n\n**Holding costs:** Property taxes, insurance, and security checks added up over 18 months.\n\n## Key Lessons Learned\n\n1. **Factor in ALL costs upfront** - My initial $25K budget became $37K reality\n2. **Subdivision isn't always profitable** - Run numbers on worst-case scenarios  \n3. **Local expertise is worth paying for** - Don't try to manage remotely\n4. **Have patient capital** - This deal took 3x longer than planned\n5. **Market timing matters** - I got lucky with recreational property demand\n\n## Could This Be Replicated Today?\n\n**Yes, but with modifications:**\n\n- Higher property prices mean larger initial investments\n- Interest rate environment affects buyer financing\n- Increased competition in some tax deed markets\n- Rising construction/improvement costs\n\n**Similar opportunities exist in:**\n- Rural Texas counties\n- Northern Arizona  \n- Parts of Nevada and Colorado\n- Montana and Idaho\n\n## Action Items for Newsletter Readers\n\n1. **Research subdivision laws** in your target counties\n2. **Build relationships** with local surveyors and attorneys before you need them\n3. **Factor in 50% cost overruns** on initial estimates\n4. **Have 12-24 months** of holding costs readily available\n\nThis deal proved that tax deed investing can generate life-changing returns, but it requires thorough preparation, adequate capital, and patience. The properties are out there – you just need to know how to find them and what to do once you own them.\n\n---\n\n*Coming next: My complete pre-auction research checklist that I use for every tax deed analysis, including the red flags that make me walk away.*\n","size_bytes":6988},"content/posts/hoa-foreclosures.md":{"content":"---\ntitle: \"HOA Foreclosures: The Hidden Opportunity in Every City\"\ndescription: \"While everyone focuses on tax sales, HOA foreclosures happen year-round with less competition and faster timelines.\"\ndate: \"2024-02-22\"\ntags: [\"HOA\", \"Strategy\", \"Foreclosures\"]\ncover: \"https://images.unsplash.com/photo-1568605114967-8130f3a36994?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\nslug: \"hoa-foreclosures-hidden-opportunity\"\n---\n\n# HOA Foreclosures: The Hidden Opportunity in Every City\n\n*February 22, 2024 • 5 min read*\n\nWhile most real estate investors are focused on tax deed auctions that happen once or twice a year, there's a year-round opportunity happening in practically every city in America that most people completely ignore: HOA foreclosures.\n\nHomeowners associations can and do foreclose on properties for unpaid dues, special assessments, and even covenant violations. These foreclosures often fly under the radar, have less competition than traditional foreclosures, and can result in incredible deals for informed investors.\n\n## How HOA Foreclosures Work\n\n**The basics:** When homeowners don't pay HOA dues or special assessments, the association can place a lien on the property. If the debt remains unpaid, they can foreclose – just like a bank.\n\n**Key differences from bank foreclosures:**\n- Faster timeline (90-120 days vs 6-12 months)\n- Less competition at auction\n- Often not listed on traditional foreclosure websites\n- Smaller debt amounts create bigger equity opportunities\n\n**HOA lien priority varies by state:**\n- **Super-priority states:** HOA liens take priority over mortgages for certain amounts\n- **Standard priority:** HOA liens are subordinate to first mortgages\n- **Mixed priority:** Different rules for different types of assessments\n\n## Why This Opportunity Exists\n\n**Most investors don't know about it:** HOA foreclosures aren't widely advertised or tracked by popular foreclosure websites.\n\n**Attorneys don't specialize:** Many foreclosure attorneys focus on bank foreclosures and don't understand HOA law.\n\n**Complex legal landscape:** State laws vary significantly, creating confusion about lien priority and foreclosure rights.\n\n**Small debt amounts:** A $5,000 HOA debt on a $200,000 house isn't worth pursuing for many investors.\n\n## Real Examples from My Portfolio\n\n### Phoenix Townhouse (2023)\n**The situation:** HOA had $12,000 lien for unpaid dues and special assessment for roof repairs. Property worth $180,000.\n\n**The process:**\n- Attended HOA foreclosure auction at law firm office\n- Only 3 bidders present\n- Won with bid of $15,000 (debt plus costs)\n- Property had $145,000 first mortgage\n\n**The outcome:**\n- Purchased subject to existing mortgage\n- Rented property for $1,400/month\n- Monthly mortgage payment: $890\n- Net cash flow: $510/month after expenses\n- Tenant eventually bought the property for $185,000\n\n### Las Vegas Condo (2022)  \n**The situation:** $8,500 HOA lien on $150,000 condo. Nevada super-priority state.\n\n**The key insight:** Nevada allows HOA liens to take priority over first mortgages up to 9 months of dues plus costs.\n\n**The result:**\n- Purchased for $9,200 at auction\n- First mortgage was wiped out (Nevada law)\n- Owned $150,000 condo free and clear\n- Sold 6 months later for $148,000\n\n## State-by-State Opportunity Analysis\n\n### Super-Priority States (Best Opportunities)\n**Nevada:** Up to 9 months priority over mortgages\n**Florida:** Up to 12 months or 1% of mortgage balance\n**Colorado:** Up to 6 months common assessments\n\n### Standard Priority States (Good for Subject-To Deals)\n**Arizona, Texas, California:** HOA liens subordinate but still create opportunities\n\n### Limited Opportunity States\n**Georgia, North Carolina:** Restrictive laws limit HOA foreclosure power\n\n## Finding HOA Foreclosure Opportunities\n\n### Direct HOA Contact\n- Call management companies of large HOAs\n- Ask about properties in foreclosure process\n- Request notice of upcoming auctions\n\n### Legal Notice Monitoring\n- Check local newspapers for foreclosure notices\n- Look specifically for \"HOA\" or \"Association\" foreclosures\n- Set up Google alerts for \"homeowners association foreclosure [your city]\"\n\n### Courthouse Research\n- Monitor foreclosure filings for HOA plaintiffs\n- Track specific law firms that handle HOA foreclosures\n- Attend foreclosure auctions even when bank properties are scheduled\n\n## Due Diligence Essentials\n\n**Title research is critical:**\n- Determine exact lien priority\n- Calculate total debt including interest and fees\n- Verify mortgage balances and payment status\n\n**HOA compliance check:**\n- Review CC&Rs and bylaws\n- Understand ongoing assessment obligations  \n- Check for pending special assessments\n\n**Property condition assessment:**\n- Many HOA foreclosures result from financial distress\n- Budget for deferred maintenance\n- Verify all utilities are functional\n\n## Common Pitfalls to Avoid\n\n**Misunderstanding lien priority:** This varies significantly by state and can make or break a deal.\n\n**Ignoring ongoing obligations:** You inherit all HOA obligations when you purchase.\n\n**Underestimating legal costs:** HOA law can be complex and require specialized attorneys.\n\n**Overlooking special assessments:** Large pending assessments can destroy your ROI.\n\n## Getting Started: 30-Day Action Plan\n\n**Week 1:** Research your state's HOA foreclosure laws and lien priority rules\n\n**Week 2:** Identify 10 large HOAs in your target area and contact their management companies\n\n**Week 3:** Start monitoring legal notices and set up Google alerts\n\n**Week 4:** Attend a local foreclosure auction to understand the process\n\n## Tools and Resources\n\n**Legal research:** Check your state's HOA statutes (usually in state code Title 47 or similar)\n\n**Property research:** Use county records to identify HOA-managed communities\n\n**Market analysis:** Focus on areas with high HOA dues and older communities\n\n## Is This Strategy Right for You?\n\n**Best for investors who:**\n- Understand subject-to transactions\n- Have good legal support\n- Can handle complex title issues\n- Want year-round deal flow\n\n**Not recommended for:**\n- Beginning investors\n- Those without legal expertise access  \n- Investors focused only on free-and-clear properties\n\n## The Bottom Line\n\nHOA foreclosures represent one of the most overlooked opportunities in real estate investing. While others are fighting over the same tax deed auctions twice a year, these opportunities happen continuously in every major metropolitan area.\n\nThe key is understanding your state's laws, building relationships with HOA management companies, and having the legal expertise to navigate complex lien priority issues.\n\nDone correctly, HOA foreclosures can provide steady deal flow with less competition and faster timelines than traditional foreclosure investing.\n\n---\n\n*Next issue: Probate investing fundamentals – how to ethically help families while building your portfolio.*\n","size_bytes":6967},"content/posts/issue-1.md":{"content":"---\ntitle: \"3 Ways to Buy Real Estate Without Banks (And Why They Work)\"\ndescription: \"Discover the proven strategies I've used to acquire over $2M in real estate without traditional financing. From tax deed auctions to probate deals, here's your complete roadmap.\"\ndate: \"2024-03-15\"\ntags: [\"Tax Deeds\", \"Strategy\", \"No-Bank Investing\"]\ncover: \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\nslug: \"3-ways-buy-real-estate-without-banks\"\n---\n\n# 3 Ways to Buy Real Estate Without Banks (And Why They Work)\n\n*Issue #1 • March 15, 2024 • 5 min read*\n\nAfter 8 years of acquiring properties without traditional bank financing, I've learned that the best real estate deals happen outside the conventional lending system. While most investors are fighting over the same MLS listings and competing with cash buyers backed by institutional money, there's an entire world of opportunities that require no credit checks, no debt-to-income ratios, and no bank approvals.\n\nHere are the three strategies that have generated the highest returns in my portfolio:\n\n## 1. Tax Deed Auctions: The Government's Fire Sale\n\n**How it works:** When property owners fail to pay taxes for a specified period (usually 2-3 years), the county can sell the property at public auction to recover the tax debt.\n\n**Why it's profitable:** You're buying at a fraction of market value because:\n- Limited advertising means fewer bidders\n- Cash-only requirement eliminates most competition  \n- Properties sell for unpaid taxes plus fees, not market value\n\n**Real example:** Last year in Catron County, NM, I purchased a 5-acre property with a cabin for $17,000. After subdividing, I sold the cabin on 1 acre for $75,000 and the remaining 4 acres for $45,000. Total return: $103,000 profit in 18 months.\n\n**Best states:** Georgia, Texas, New Mexico, Alaska\n**Typical investment:** $5,000 - $50,000\n**Average ROI:** 150% - 400%\n\n## 2. Probate Direct Marketing: Helping Families in Transition\n\n**How it works:** When someone dies owning real estate, their heirs often need to sell quickly to settle the estate or divide assets. These sales happen off-market, creating opportunities for win-win transactions.\n\n**Why it's profitable:**\n- No competition from retail buyers\n- Motivated sellers who need certainty and speed\n- Properties often need work, creating additional value-add opportunities\n\n**The approach:** Monitor probate filings, send empathetic direct mail to heirs offering fair cash purchases. Focus on helping families through a difficult time, not just getting deals.\n\n**Real example:** Contacted heirs of a Phoenix property listed in probate court. Family needed to sell within 60 days to avoid losing the property to liens. Purchased for $145,000, invested $25,000 in repairs, sold for $220,000. Profit: $50,000, and the family avoided foreclosure.\n\n**Best markets:** Major metro areas with active probate courts\n**Typical investment:** $50,000 - $200,000  \n**Average ROI:** 25% - 50%\n\n## 3. HOA Foreclosure Opportunities: The Hidden Market\n\n**How it works:** Homeowners associations can foreclose on properties for unpaid dues, special assessments, or violations. These foreclosures often have shorter timelines and less competition than bank foreclosures.\n\n**Why most investors miss this:**\n- HOA foreclosures aren't widely advertised\n- Process varies significantly by state\n- Many investors don't understand HOA lien priority\n\n**The opportunity:** In many states, HOA liens can take priority over mortgages for certain amounts, creating situations where you can acquire properties subject to existing financing.\n\n**Due diligence required:** \n- Understand your state's HOA lien laws\n- Verify the validity of the HOA's claim\n- Calculate total costs including any senior liens\n\n**Best states:** Nevada, Colorado, Florida, Texas\n**Typical investment:** $10,000 - $75,000\n**Average ROI:** 100% - 300%\n\n## Why These Strategies Work (When Banks Don't)\n\n**Speed advantage:** While traditional financing takes 30-45 days, these deals close in 1-2 weeks with cash.\n\n**Less competition:** Requiring cash upfront eliminates 90% of potential buyers.\n\n**Information asymmetry:** Most investors don't know these opportunities exist or how to find them.\n\n**Motivated sellers:** Whether it's the government collecting taxes or families settling estates, sellers have compelling reasons to transact quickly.\n\n## Getting Started: Your 30-Day Action Plan\n\n**Week 1:** Research your state's tax deed laws and upcoming auction dates\n**Week 2:** Attend a local tax deed auction as an observer (don't bid yet)\n**Week 3:** Visit your county probate court and review recent filings\n**Week 4:** Choose one strategy and commit to your first deal analysis\n\n## Important Disclaimers\n\nThese strategies involve risk and require significant due diligence. Always:\n- Verify clear title before purchasing\n- Understand redemption rights and timelines  \n- Budget for unexpected repairs and holding costs\n- Consult local attorneys familiar with these transaction types\n- Never invest money you can't afford to lose\n\n## Next Issue Preview\n\nNext week, I'll break down my complete pre-auction research process for tax deed properties, including the 20-point checklist I use for every potential purchase.\n\nHave questions about getting started? Hit reply – I read every email.\n\n---\n\n*Ralph Biah has been investing in alternative real estate strategies since 2016, acquiring properties in 12 states without traditional financing. This newsletter shares real deals and proven strategies from his active portfolio.*\n","size_bytes":5661},"client/src/components/CTABox.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport { ReactNode } from \"react\";\n\ninterface CTABoxProps {\n  title: string;\n  description: string;\n  buttonText: string;\n  buttonHref: string;\n  icon?: ReactNode;\n  variant?: \"primary\" | \"secondary\" | \"accent\";\n}\n\nexport default function CTABox({ \n  title, \n  description, \n  buttonText, \n  buttonHref, \n  icon, \n  variant = \"primary\" \n}: CTABoxProps) {\n  const getVariantClasses = () => {\n    switch (variant) {\n      case \"secondary\":\n        return \"bg-secondary/10 border-secondary\";\n      case \"accent\":\n        return \"bg-accent/10 border-accent\";\n      default:\n        return \"bg-primary/10 border-primary\";\n    }\n  };\n\n  const getIconClasses = () => {\n    switch (variant) {\n      case \"secondary\":\n        return \"bg-secondary/10 text-secondary\";\n      case \"accent\":\n        return \"bg-accent/10 text-accent-foreground\";\n      default:\n        return \"bg-primary/10 text-primary\";\n    }\n  };\n\n  const getButtonClasses = () => {\n    switch (variant) {\n      case \"secondary\":\n        return \"bg-secondary text-secondary-foreground hover:bg-primary\";\n      case \"accent\":\n        return \"bg-accent text-accent-foreground hover:bg-primary hover:text-primary-foreground\";\n      default:\n        return \"bg-primary text-primary-foreground hover:bg-secondary\";\n    }\n  };\n\n  return (\n    <Card className={`p-8 text-center hover:shadow-md transition-shadow ${getVariantClasses()}`}>\n      {icon && (\n        <div className={`w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6 ${getIconClasses()}`}>\n          {icon}\n        </div>\n      )}\n      \n      <h4 className=\"font-serif text-xl font-bold text-foreground mb-3\">\n        {title}\n      </h4>\n      \n      <p className=\"font-sans text-muted-foreground mb-6\">\n        {description}\n      </p>\n      \n      <Button \n        asChild\n        className={`font-mono font-semibold transition-colors w-full ${getButtonClasses()}`}\n        data-testid={`button-cta-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n      >\n        <Link href={buttonHref}>{buttonText}</Link>\n      </Button>\n    </Card>\n  );\n}\n","size_bytes":2200},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Rss, Linkedin } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-accent/5 border-t border-border py-12\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"grid md:grid-cols-4 gap-8 mb-8\">\n            {/* Brand */}\n            <div className=\"md:col-span-2\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-10 h-10 bg-primary rounded-lg flex items-center justify-center\">\n                  <span className=\"text-primary-foreground font-mono font-bold\">DWD</span>\n                </div>\n                <div>\n                  <h4 className=\"font-serif font-bold text-lg text-foreground\">Deeds Without Debt</h4>\n                  <p className=\"text-muted-foreground text-sm font-sans\">Buy Real Estate Without Banks</p>\n                </div>\n              </div>\n              <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed max-w-md\">\n                Weekly insights on alternative real estate investing strategies including tax deeds, tax liens, and probate deals.\n              </p>\n            </div>\n\n            {/* Quick Links */}\n            <div>\n              <h5 className=\"font-mono font-semibold text-foreground mb-4\">Quick Links</h5>\n              <ul className=\"space-y-2\">\n                <li>\n                  <Link \n                    href=\"/archive\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-archive\"\n                  >\n                    Newsletter Archive\n                  </Link>\n                </li>\n                <li>\n                  <Link \n                    href=\"/resources\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-resources\"\n                  >\n                    Free Resources\n                  </Link>\n                </li>\n                <li>\n                  <Link \n                    href=\"/state-guides\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-state-guides\"\n                  >\n                    State Guides\n                  </Link>\n                </li>\n                <li>\n                  <Link \n                    href=\"/about\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-about\"\n                  >\n                    About Ralph\n                  </Link>\n                </li>\n              </ul>\n            </div>\n\n            {/* Legal */}\n            <div>\n              <h5 className=\"font-mono font-semibold text-foreground mb-4\">Legal</h5>\n              <ul className=\"space-y-2\">\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-privacy\"\n                  >\n                    Privacy Policy\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-terms\"\n                  >\n                    Terms of Service\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-disclaimer\"\n                  >\n                    Disclaimer\n                  </a>\n                </li>\n                <li>\n                  <a \n                    href=\"#\" \n                    className=\"font-sans text-muted-foreground hover:text-primary transition-colors\"\n                    data-testid=\"link-footer-contact\"\n                  >\n                    Contact\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n\n          {/* Disclaimer */}\n          <div className=\"border-t border-border pt-8\">\n            <div className=\"bg-accent/10 rounded-lg p-6 mb-6\">\n              <p className=\"font-sans text-sm text-muted-foreground leading-relaxed\">\n                <strong className=\"text-foreground\">Disclaimer:</strong> This content is for educational purposes only and does not constitute investment advice.\n                Real estate investing involves risk. Always consult with qualified professionals and conduct your own due diligence\n                before making investment decisions. Past performance does not guarantee future results.\n              </p>\n            </div>\n\n            <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n              <p className=\"font-sans text-sm text-muted-foreground\">\n                © 2024 Deeds Without Debt. All rights reserved.\n              </p>\n              <div className=\"flex items-center gap-6\">\n                <a \n                  href=\"/rss.xml\" \n                  className=\"text-muted-foreground hover:text-primary transition-colors\"\n                  data-testid=\"link-footer-rss\"\n                >\n                  <span className=\"sr-only\">RSS Feed</span>\n                  <Rss className=\"w-5 h-5\" />\n                </a>\n                <a \n                  href=\"#\" \n                  className=\"text-muted-foreground hover:text-primary transition-colors\"\n                  data-testid=\"link-footer-linkedin\"\n                >\n                  <span className=\"sr-only\">LinkedIn</span>\n                  <Linkedin className=\"w-5 h-5\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6109},"client/src/components/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X } from \"lucide-react\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const isActive = (path: string) => location === path;\n\n  const navItems = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/archive\", label: \"Archive\" },\n    { href: \"/about\", label: \"About\" },\n    { href: \"/resources\", label: \"Resources\" },\n    { href: \"/state-guides\", label: \"State Guides\" },\n  ];\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b border-border\">\n      <div className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3\" data-testid=\"link-home\">\n            <div className=\"w-12 h-12 bg-primary rounded-lg flex items-center justify-center\">\n              <span className=\"text-primary-foreground font-mono font-bold text-lg\">DWD</span>\n            </div>\n            <div>\n              <h1 className=\"font-serif font-bold text-xl text-foreground\">Deeds Without Debt</h1>\n              <p className=\"text-muted-foreground text-sm font-sans\">Buy Real Estate Without Banks</p>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={`font-sans font-medium transition-colors ${\n                  isActive(item.href)\n                    ? \"text-foreground\"\n                    : \"text-muted-foreground hover:text-primary\"\n                }`}\n                data-testid={`link-nav-${item.label.toLowerCase().replace(' ', '-')}`}\n              >\n                {item.label}\n              </Link>\n            ))}\n            <Button\n              asChild\n              className=\"bg-primary text-primary-foreground px-6 py-2 rounded-md font-mono font-semibold text-sm hover:bg-secondary transition-colors\"\n              data-testid=\"button-subscribe-nav\"\n            >\n              <Link href=\"/subscribe\">Subscribe</Link>\n            </Button>\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"md:hidden p-2 text-foreground hover:text-primary transition-colors\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"button-mobile-menu\"\n          >\n            {isMobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n          </Button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden mt-4 pb-4 border-t border-border pt-4\" data-testid=\"mobile-menu\">\n            <nav className=\"flex flex-col space-y-3\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.href}\n                  href={item.href}\n                  className={`font-sans font-medium transition-colors ${\n                    isActive(item.href)\n                      ? \"text-foreground\"\n                      : \"text-muted-foreground hover:text-primary\"\n                  }`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  data-testid={`link-mobile-${item.label.toLowerCase().replace(' ', '-')}`}\n                >\n                  {item.label}\n                </Link>\n              ))}\n              <Button\n                asChild\n                className=\"bg-primary text-primary-foreground px-6 py-2 rounded-md font-mono font-semibold text-sm hover:bg-secondary transition-colors w-fit\"\n                onClick={() => setIsMobileMenuOpen(false)}\n                data-testid=\"button-subscribe-mobile\"\n              >\n                <Link href=\"/subscribe\">Subscribe</Link>\n              </Button>\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n","size_bytes":4214},"client/src/components/Hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport default function Hero() {\n  return (\n    <section className=\"py-16 lg:py-24 border-b border-border\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"font-serif text-4xl lg:text-6xl font-bold text-foreground mb-6 leading-tight\">\n            Master Alternative Real Estate Investing\n          </h2>\n          <p className=\"font-sans text-xl lg:text-2xl text-muted-foreground mb-8 leading-relaxed\">\n            Learn how to acquire properties through tax deeds, tax liens, HOA foreclosures, and probate deals.\n            No bank financing, no credit checks, no traditional mortgages required.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n            <Button \n              asChild\n              className=\"bg-primary text-primary-foreground px-8 py-4 rounded-lg font-mono font-bold text-lg hover:bg-secondary transition-colors shadow-lg\"\n              data-testid=\"button-newsletter-hero\"\n            >\n              <Link href=\"/subscribe\">Get Free Newsletter</Link>\n            </Button>\n            <Button \n              asChild\n              variant=\"outline\"\n              className=\"border border-border text-foreground px-8 py-4 rounded-lg font-mono font-semibold text-lg hover:bg-accent hover:text-accent-foreground transition-colors\"\n              data-testid=\"button-archive-hero\"\n            >\n              <Link href=\"/archive\">Browse Archive</Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1677},"client/src/components/Layout.tsx":{"content":"import { ReactNode } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":366},"client/src/components/NewsletterForm.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Check, Mail, Lock, ArrowRight } from \"lucide-react\";\n\ninterface NewsletterFormProps {\n  variant?: \"default\" | \"hero\";\n  className?: string;\n}\n\nexport default function NewsletterForm({ variant = \"default\", className = \"\" }: NewsletterFormProps) {\n  const [email, setEmail] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const actionUrl = import.meta.env.VITE_NEWSLETTER_ACTION_URL || \"https://api.beehiiv.com/v2/forms/submit\";\n      \n      const response = await fetch(actionUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (response.ok) {\n        setIsSuccess(true);\n        setEmail(\"\");\n        toast({\n          title: \"Success!\",\n          description: \"Thank you for subscribing to our newsletter.\",\n        });\n      } else {\n        throw new Error(\"Subscription failed\");\n      }\n    } catch (error) {\n      console.error(\"Newsletter subscription error:\", error);\n      toast({\n        title: \"Subscription Error\",\n        description: \"There was an error subscribing to our newsletter. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (variant === \"hero\") {\n    return (\n      <section className=\"py-16 bg-primary text-primary-foreground\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h3 className=\"font-serif text-3xl lg:text-4xl font-bold mb-6 leading-tight\">\n              Get the Deeds Without Debt Newsletter\n            </h3>\n            <p className=\"font-sans text-xl text-primary-foreground/80 mb-8 leading-relaxed\">\n              Weekly insights on alternative real estate investing. Real deals, proven strategies, and actionable opportunities delivered to your inbox.\n            </p>\n\n            <form className=\"max-w-md mx-auto mb-8\" onSubmit={handleSubmit}>\n              <div className=\"flex flex-col sm:flex-row gap-3\">\n                <Input\n                  type=\"email\"\n                  placeholder=\"Enter your email address\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                  disabled={isSubmitting || isSuccess}\n                  className=\"flex-1 px-4 py-3 rounded-lg bg-input text-foreground font-sans placeholder:text-muted-foreground border border-border focus:outline-none focus:ring-2 focus:ring-ring\"\n                  data-testid=\"input-newsletter-email\"\n                />\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting || isSuccess}\n                  className=\"bg-secondary text-secondary-foreground px-8 py-3 rounded-lg font-mono font-bold hover:bg-accent hover:text-accent-foreground transition-colors whitespace-nowrap\"\n                  data-testid=\"button-newsletter-submit\"\n                >\n                  {isSubmitting ? \"Subscribing...\" : isSuccess ? \"Subscribed!\" : \"Subscribe Free\"}\n                </Button>\n              </div>\n            </form>\n\n            <div className=\"grid sm:grid-cols-3 gap-6 text-sm\">\n              <div className=\"flex items-center justify-center gap-2\">\n                <Check className=\"w-5 h-5 text-secondary\" />\n                <span className=\"font-sans text-primary-foreground/90\">Weekly delivery</span>\n              </div>\n              <div className=\"flex items-center justify-center gap-2\">\n                <Lock className=\"w-5 h-5 text-secondary\" />\n                <span className=\"font-sans text-primary-foreground/90\">No spam ever</span>\n              </div>\n              <div className=\"flex items-center justify-center gap-2\">\n                <ArrowRight className=\"w-5 h-5 text-secondary\" />\n                <span className=\"font-sans text-primary-foreground/90\">Unsubscribe anytime</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={`space-y-4 ${className}`}>\n      <div className=\"flex flex-col sm:flex-row gap-3\">\n        <div className=\"flex-1 relative\">\n          <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n          <Input\n            type=\"email\"\n            placeholder=\"Enter your email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            disabled={isSubmitting || isSuccess}\n            className=\"pl-10\"\n            data-testid=\"input-newsletter-email-default\"\n          />\n        </div>\n        <Button\n          type=\"submit\"\n          disabled={isSubmitting || isSuccess}\n          className=\"bg-primary text-primary-foreground font-mono font-semibold hover:bg-secondary transition-colors\"\n          data-testid=\"button-newsletter-submit-default\"\n        >\n          {isSubmitting ? \"Subscribing...\" : isSuccess ? \"Subscribed!\" : \"Subscribe\"}\n        </Button>\n      </div>\n      \n      {isSuccess && (\n        <p className=\"text-sm text-primary font-sans\">\n          ✓ Thank you for subscribing! Check your email for confirmation.\n        </p>\n      )}\n    </form>\n  );\n}\n","size_bytes":5671},"client/src/components/PinnedIssue.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\n\nexport default function PinnedIssue() {\n  return (\n    <section className=\"py-12 bg-accent/10 border-b border-border\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"flex items-center gap-2 mb-6\">\n            <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n            <span className=\"font-mono font-semibold text-sm text-primary uppercase tracking-wide\">\n              Pinned Issue\n            </span>\n          </div>\n\n          <div className=\"bg-card rounded-xl shadow-sm border border-border p-8 lg:p-12\">\n            <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n              <div>\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <span className=\"bg-primary text-primary-foreground px-3 py-1 rounded-full font-mono font-bold text-sm\">\n                    Issue #1\n                  </span>\n                  <span className=\"text-muted-foreground font-sans text-sm\">March 15, 2024</span>\n                </div>\n                <h3 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-4 leading-tight\">\n                  3 Ways to Buy Real Estate Without Banks (And Why They Work)\n                </h3>\n                <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n                  Discover the proven strategies I've used to acquire over $2M in real estate without traditional financing.\n                  From tax deed auctions to probate deals, here's your complete roadmap.\n                </p>\n                <div className=\"flex items-center gap-4\">\n                  <Button \n                    asChild\n                    className=\"bg-primary text-primary-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-secondary transition-colors\"\n                    data-testid=\"button-read-pinned-issue\"\n                  >\n                    <Link href=\"/archive\">Read Full Issue</Link>\n                  </Button>\n                  <span className=\"font-sans text-sm text-muted-foreground\">5 min read</span>\n                </div>\n              </div>\n              <div className=\"lg:order-first\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                  alt=\"Modern house with sold sign representing successful real estate investment\"\n                  className=\"rounded-lg shadow-lg w-full h-auto\"\n                  loading=\"lazy\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2803},"client/src/components/PostCard.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\n\nexport interface Post {\n  slug: string;\n  title: string;\n  description: string;\n  date: string;\n  tags: string[];\n  cover?: string;\n  readTime?: string;\n  category?: string;\n}\n\ninterface PostCardProps {\n  post: Post;\n}\n\nexport default function PostCard({ post }: PostCardProps) {\n  const getCategoryColor = (category?: string) => {\n    switch (category?.toLowerCase()) {\n      case 'state guide':\n        return 'bg-secondary text-secondary-foreground';\n      case 'case study':\n        return 'bg-primary text-primary-foreground';\n      case 'strategy':\n        return 'bg-accent text-accent-foreground';\n      default:\n        return 'bg-muted text-muted-foreground';\n    }\n  };\n\n  return (\n    <article className=\"bg-card rounded-xl shadow-sm border border-border overflow-hidden hover:shadow-md transition-shadow\">\n      {post.cover && (\n        <div className=\"aspect-video bg-accent/20 relative\">\n          <img\n            src={post.cover}\n            alt={`Cover image for ${post.title}`}\n            className=\"w-full h-full object-cover\"\n            loading=\"lazy\"\n          />\n          {post.category && (\n            <div className=\"absolute top-4 left-4\">\n              <Badge className={`${getCategoryColor(post.category)} px-3 py-1 rounded-full font-mono font-bold text-xs uppercase tracking-wide`}>\n                {post.category}\n              </Badge>\n            </div>\n          )}\n        </div>\n      )}\n      \n      <div className=\"p-6\">\n        <div className=\"flex items-center gap-2 mb-3\">\n          <span className=\"text-muted-foreground font-sans text-sm\">{post.date}</span>\n          {post.readTime && (\n            <>\n              <span className=\"text-muted-foreground\">•</span>\n              <span className=\"text-muted-foreground font-sans text-sm\">{post.readTime}</span>\n            </>\n          )}\n        </div>\n        \n        <h4 className=\"font-serif text-xl font-bold text-foreground mb-3 leading-tight\">\n          {post.title}\n        </h4>\n        \n        <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed\">\n          {post.description}\n        </p>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex gap-2\">\n            {post.tags.slice(0, 2).map((tag) => (\n              <Badge\n                key={tag}\n                variant=\"secondary\"\n                className=\"bg-accent/20 text-accent-foreground px-2 py-1 rounded-md font-sans text-xs\"\n              >\n                {tag}\n              </Badge>\n            ))}\n          </div>\n          <Button\n            asChild\n            variant=\"link\"\n            className=\"text-primary hover:text-secondary font-mono font-semibold text-sm transition-colors p-0\"\n            data-testid={`button-read-more-${post.slug}`}\n          >\n            <Link href={`/archive/${post.slug}`}>Read More →</Link>\n          </Button>\n        </div>\n      </div>\n    </article>\n  );\n}\n","size_bytes":3069},"client/src/components/SearchBar.tsx":{"content":"import { useState } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Search, X } from \"lucide-react\";\n\ninterface SearchBarProps {\n  onSearch: (query: string) => void;\n  placeholder?: string;\n  className?: string;\n}\n\nexport default function SearchBar({ \n  onSearch, \n  placeholder = \"Search articles...\", \n  className = \"\" \n}: SearchBarProps) {\n  const [query, setQuery] = useState(\"\");\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSearch(query);\n  };\n\n  const handleClear = () => {\n    setQuery(\"\");\n    onSearch(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={`relative ${className}`}>\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n        <Input\n          type=\"text\"\n          placeholder={placeholder}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"pl-10 pr-20 font-sans\"\n          data-testid=\"input-search\"\n        />\n        {query && (\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleClear}\n            className=\"absolute right-12 top-1/2 transform -translate-y-1/2 p-1 h-auto\"\n            data-testid=\"button-search-clear\"\n          >\n            <X className=\"w-4 h-4\" />\n          </Button>\n        )}\n        <Button\n          type=\"submit\"\n          size=\"sm\"\n          className=\"absolute right-2 top-1/2 transform -translate-y-1/2 font-mono font-semibold\"\n          data-testid=\"button-search-submit\"\n        >\n          Search\n        </Button>\n      </div>\n    </form>\n  );\n}\n","size_bytes":1741},"client/src/components/StateGuideRenderer.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { StateGuide } from \"@/lib/stateGuides\";\nimport { FactsPanel } from \"@/components/ui/FactsPanel\";\nimport { TableOfContents } from \"@/components/ui/TableOfContents\";\n\ninterface StateGuideRendererProps {\n  guide: StateGuide;\n}\n\nexport default function StateGuideRenderer({ guide }: StateGuideRendererProps) {\n  const [content, setContent] = useState<string>(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const loadContent = async () => {\n      try {\n        const response = await fetch(`/content/state-guides/${guide.slug}.mdx`);\n        if (response.ok) {\n          const mdxContent = await response.text();\n          // Remove frontmatter\n          const contentWithoutFrontmatter = mdxContent.replace(/^---[\\s\\S]*?---\\n/, '');\n          setContent(contentWithoutFrontmatter);\n        } else {\n          setContent(\"Content not available yet. This guide is still being researched and will be available soon.\");\n        }\n      } catch (error) {\n        console.error(\"Error loading guide content:\", error);\n        setContent(\"Error loading content. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadContent();\n  }, [guide.slug]);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"coming_soon\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"research\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case \"deed\":\n        return \"bg-primary/10 text-primary\";\n      case \"lien\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"hybrid\":\n        return \"bg-purple-100 text-purple-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"Available\";\n      case \"coming_soon\":\n        return \"Coming Soon\";\n      case \"research\":\n        return \"Research\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  // Parse content to add IDs to headings for TOC\n  const processedContent = content.replace(/^(#{1,6})\\s+(.+)$/gm, (match, hashes, title) => {\n    const id = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    return `<${hashes.length === 1 ? 'h1' : hashes.length === 2 ? 'h2' : hashes.length === 3 ? 'h3' : 'h4'} id=\"${id}\" class=\"font-serif font-bold text-foreground mb-4 mt-8 ${\n      hashes.length === 1 ? 'text-4xl' : \n      hashes.length === 2 ? 'text-3xl' : \n      hashes.length === 3 ? 'text-2xl' : 'text-xl'\n    }\">${title}</${hashes.length === 1 ? 'h1' : hashes.length === 2 ? 'h2' : hashes.length === 3 ? 'h3' : 'h4'}>`;\n  });\n\n  // Simple markdown to HTML conversion\n  const renderMarkdown = (text: string) => {\n    return text\n      .replace(/^\\*\\*(.+):\\*\\*$/gm, '<h4 class=\"font-semibold text-foreground mb-2 mt-4\">$1:</h4>')\n      .replace(/^- (.+)$/gm, '<li class=\"ml-4 mb-1\">• $1</li>')\n      .replace(/^\\d+\\. (.+)$/gm, '<li class=\"ml-4 mb-1 list-decimal\">$1</li>')\n      .replace(/^(.+)$/gm, '<p class=\"mb-4 leading-relaxed\">$1</p>')\n      .replace(/\\*\\*(.+?)\\*\\*/g, '<strong class=\"font-semibold\">$1</strong>')\n      .replace(/\\*(.+?)\\*/g, '<em class=\"italic\">$1</em>')\n      .replace(/`(.+?)`/g, '<code class=\"bg-muted px-2 py-1 rounded text-sm\">$1</code>');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"text-center\">\n              <h1 className=\"font-serif text-4xl font-bold text-foreground mb-6\">\n                Loading {guide.name} Guide...\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Back Navigation */}\n          <div className=\"mb-8\">\n            <Button\n              asChild\n              variant=\"outline\"\n              className=\"font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n              data-testid=\"button-back-to-state-guides\"\n            >\n              <Link href=\"/state-guides\">\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to State Guides\n              </Link>\n            </Button>\n          </div>\n\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <div className=\"flex justify-center items-center gap-4 mb-6\">\n              <Badge className={`px-4 py-2 rounded-full font-mono font-bold text-sm ${getStatusColor(guide.status)}`}>\n                {getStatusLabel(guide.status)}\n              </Badge>\n              <Badge className={`px-4 py-2 rounded-full font-mono font-bold text-sm ${getTypeColor(guide.type)}`}>\n                {guide.type.toUpperCase()} SYSTEM\n              </Badge>\n            </div>\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n              {guide.name} Tax Investment Guide\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground mb-8 leading-relaxed\">\n              {guide.summary}\n            </p>\n          </div>\n\n          {/* Main Layout with Sidebar */}\n          <div className=\"grid lg:grid-cols-4 gap-8\">\n            {/* Main Content */}\n            <div className=\"lg:col-span-3\">\n              <div className=\"bg-card rounded-xl shadow-sm border border-border p-8 lg:p-12\">\n                <div className=\"prose prose-lg max-w-none\">\n                  <div \n                    className=\"leading-relaxed text-foreground font-sans\"\n                    dangerouslySetInnerHTML={{ __html: renderMarkdown(processedContent) }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"space-y-6\">\n                <FactsPanel guide={guide} />\n                <TableOfContents content={content} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6637},"client/src/components/Tag.tsx":{"content":"import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface TagProps {\n  tag: string;\n  isActive?: boolean;\n  onClick?: (tag: string) => void;\n  variant?: \"default\" | \"filter\";\n}\n\nexport default function Tag({ tag, isActive = false, onClick, variant = \"default\" }: TagProps) {\n  if (variant === \"filter\") {\n    return (\n      <Button\n        variant={isActive ? \"default\" : \"outline\"}\n        size=\"sm\"\n        onClick={() => onClick?.(tag)}\n        className={`font-sans text-xs transition-colors ${\n          isActive \n            ? \"bg-primary text-primary-foreground\" \n            : \"bg-transparent text-muted-foreground hover:bg-accent hover:text-accent-foreground\"\n        }`}\n        data-testid={`button-tag-filter-${tag.toLowerCase().replace(/\\s+/g, '-')}`}\n      >\n        {tag}\n      </Button>\n    );\n  }\n\n  return (\n    <Badge\n      variant=\"secondary\"\n      className=\"bg-accent/20 text-accent-foreground px-2 py-1 rounded-md font-sans text-xs cursor-pointer hover:bg-accent/30 transition-colors\"\n      onClick={() => onClick?.(tag)}\n      data-testid={`tag-${tag.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {tag}\n    </Badge>\n  );\n}\n","size_bytes":1200},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/content.ts":{"content":"export interface Post {\n  slug: string;\n  title: string;\n  description: string;\n  date: string;\n  tags: string[];\n  cover?: string;\n  readTime?: string;\n  category?: string;\n  content?: string;\n}\n\nexport interface StateGuide {\n  slug: string;\n  name: string;\n  type: 'deed' | 'lien' | 'hybrid' | 'tbd';\n  status: 'available' | 'coming_soon' | 'research';\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'tbd';\n  summary: string;\n  auctions_per_year: string;\n  format: string;\n  last_updated: string;\n}\n\n// Static post data - in a real implementation this would come from markdown files\nconst posts: Post[] = [\n  {\n    slug: \"3-ways-buy-real-estate-without-banks\",\n    title: \"3 Ways to Buy Real Estate Without Banks (And Why They Work)\",\n    description: \"Discover the proven strategies I've used to acquire over $2M in real estate without traditional financing. From tax deed auctions to probate deals, here's your complete roadmap.\",\n    date: \"March 15, 2024\",\n    tags: [\"Tax Deeds\", \"Strategy\", \"No-Bank Investing\"],\n    cover: \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"5 min read\",\n    category: \"Strategy\"\n  },\n  {\n    slug: \"alaska-tax-sales-guide\",\n    title: \"How Alaska Tax Sales Work: September 2025 Borough Auction Guide\",\n    description: \"Alaska's unique borough structure creates exceptional opportunities. Here's everything you need to know about the upcoming September auction.\",\n    date: \"March 8, 2024\",\n    tags: [\"Alaska\", \"Tax Sales\", \"State Guide\"],\n    cover: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"3 min read\",\n    category: \"State Guide\"\n  },\n  {\n    slug: \"catron-county-case-study\",\n    title: \"Catron County Win: $17K to $120K in 18 Months\",\n    description: \"My personal case study of turning a tax deed purchase into a massive profit by subdividing 5 acres and selling the cabin separately.\",\n    date: \"March 1, 2024\",\n    tags: [\"Case Study\", \"Profit\", \"New Mexico\"],\n    cover: \"https://images.unsplash.com/photo-1449824913935-59a10b8d2000?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"7 min read\",\n    category: \"Case Study\"\n  },\n  {\n    slug: \"hoa-foreclosures-hidden-opportunity\",\n    title: \"HOA Foreclosures: The Hidden Opportunity in Every City\",\n    description: \"While everyone focuses on tax sales, HOA foreclosures happen year-round with less competition and faster timelines.\",\n    date: \"February 22, 2024\",\n    tags: [\"HOA\", \"Strategy\", \"Foreclosures\"],\n    cover: \"https://images.unsplash.com/photo-1568605114967-8130f3a36994?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"5 min read\",\n    category: \"Strategy\"\n  },\n  {\n    slug: \"probate-investing-guide\",\n    title: \"Probate Real Estate: Finding Off-Market Deals\",\n    description: \"Learn how to ethically approach probate situations and help families while building your portfolio.\",\n    date: \"February 15, 2024\",\n    tags: [\"Probate\", \"Off-Market\", \"Strategy\"],\n    cover: \"https://images.unsplash.com/photo-1450101499163-c8848c66ca85?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"6 min read\",\n    category: \"Strategy\"\n  },\n  {\n    slug: \"tax-lien-certificates-explained\",\n    title: \"Tax Lien Certificates: Guaranteed Returns or Risky Gamble?\",\n    description: \"Breaking down the reality of tax lien investing, including the states where it actually works.\",\n    date: \"February 8, 2024\",\n    tags: [\"Tax Liens\", \"Certificates\", \"ROI\"],\n    cover: \"https://images.unsplash.com/photo-1554224155-6726b3ff858f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\",\n    readTime: \"8 min read\",\n    category: \"Strategy\"\n  }\n];\n\nexport function getAllPosts(): Post[] {\n  return posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport function getPostBySlug(slug: string): Post | undefined {\n  return posts.find(post => post.slug === slug);\n}\n\nexport function getPostsByTag(tag: string): Post[] {\n  return posts.filter(post => post.tags.includes(tag)).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\nexport function getUniqueTags(): string[] {\n  const allTags = posts.flatMap(post => post.tags);\n  return Array.from(new Set(allTags)).sort();\n}\n\nexport function getFeaturedPosts(limit = 3): Post[] {\n  return posts.slice(0, limit);\n}\n\nexport function searchPosts(query: string): Post[] {\n  const lowercaseQuery = query.toLowerCase();\n  return posts.filter(post =>\n    post.title.toLowerCase().includes(lowercaseQuery) ||\n    post.description.toLowerCase().includes(lowercaseQuery) ||\n    post.tags.some(tag => tag.toLowerCase().includes(lowercaseQuery))\n  ).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n}\n\n// State Guides functionality\nlet stateGuideData: { states: StateGuide[] } | null = null;\n\nexport async function loadStateGuides(): Promise<StateGuide[]> {\n  if (stateGuideData) {\n    return stateGuideData.states;\n  }\n\n  try {\n    const response = await fetch('/content/state-guides/index.yml');\n    const yamlText = await response.text();\n    \n    // Basic YAML parsing for our simple structure\n    const lines = yamlText.split('\\n');\n    const states: StateGuide[] = [];\n    let currentState: Partial<StateGuide> = {};\n    \n    for (const line of lines) {\n      if (line.trim().startsWith('- slug:')) {\n        if (currentState.slug) {\n          states.push(currentState as StateGuide);\n        }\n        currentState = { slug: line.split(':')[1].trim() };\n      } else if (line.trim().includes(':') && currentState.slug) {\n        const [key, ...valueParts] = line.trim().split(':');\n        const value = valueParts.join(':').trim().replace(/^\"/, '').replace(/\"$/, '');\n        \n        switch (key.trim()) {\n          case 'name':\n            currentState.name = value;\n            break;\n          case 'type':\n            currentState.type = value as StateGuide['type'];\n            break;\n          case 'status':\n            currentState.status = value as StateGuide['status'];\n            break;\n          case 'difficulty':\n            currentState.difficulty = value as StateGuide['difficulty'];\n            break;\n          case 'summary':\n            currentState.summary = value;\n            break;\n          case 'auctions_per_year':\n            currentState.auctions_per_year = value;\n            break;\n          case 'format':\n            currentState.format = value;\n            break;\n          case 'last_updated':\n            currentState.last_updated = value;\n            break;\n        }\n      }\n    }\n    \n    // Don't forget the last state\n    if (currentState.slug) {\n      states.push(currentState as StateGuide);\n    }\n    \n    stateGuideData = { states };\n    return states;\n  } catch (error) {\n    console.error('Error loading state guides:', error);\n    return [];\n  }\n}\n\nexport function getStateGuideBySlug(slug: string): StateGuide | undefined {\n  return stateGuideData?.states.find(state => state.slug === slug);\n}\n\nexport function getAvailableStateGuides(): StateGuide[] {\n  return stateGuideData?.states.filter(state => state.status === 'available') || [];\n}\n\nexport function getStateGuidesByType(type: StateGuide['type']): StateGuide[] {\n  return stateGuideData?.states.filter(state => state.type === type) || [];\n}\n\nexport function getFeaturedStateGuide(): StateGuide | undefined {\n  // Return Alaska as the featured guide\n  return stateGuideData?.states.find(state => state.slug === 'alaska');\n}\n","size_bytes":7858},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/seo.ts":{"content":"interface SEOData {\n  title?: string;\n  description?: string;\n  canonical?: string;\n  ogImage?: string;\n  ogType?: string;\n  noindex?: boolean;\n}\n\nexport function setSEOData({\n  title,\n  description,\n  canonical,\n  ogImage,\n  ogType = \"website\",\n  noindex = false\n}: SEOData) {\n  // Update document title\n  if (title) {\n    document.title = title;\n  }\n\n  // Update meta description\n  if (description) {\n    updateMetaTag(\"description\", description);\n  }\n\n  // Update canonical URL\n  if (canonical) {\n    updateLinkTag(\"canonical\", `https://deedswithoutdebt.com${canonical}`);\n  }\n\n  // Update Open Graph tags\n  updateMetaTag(\"og:title\", title || document.title, \"property\");\n  updateMetaTag(\"og:description\", description || \"\", \"property\");\n  updateMetaTag(\"og:type\", ogType, \"property\");\n  if (canonical) {\n    updateMetaTag(\"og:url\", `https://deedswithoutdebt.com${canonical}`, \"property\");\n  }\n  if (ogImage) {\n    updateMetaTag(\"og:image\", ogImage, \"property\");\n  }\n\n  // Update Twitter Card tags\n  updateMetaTag(\"twitter:title\", title || document.title, \"name\");\n  updateMetaTag(\"twitter:description\", description || \"\", \"name\");\n  if (ogImage) {\n    updateMetaTag(\"twitter:image\", ogImage, \"name\");\n  }\n\n  // Update robots meta tag\n  if (noindex) {\n    updateMetaTag(\"robots\", \"noindex,nofollow\");\n  } else {\n    updateMetaTag(\"robots\", \"index,follow\");\n  }\n}\n\nfunction updateMetaTag(name: string, content: string, attribute: \"name\" | \"property\" = \"name\") {\n  let meta = document.querySelector(`meta[${attribute}=\"${name}\"]`);\n  \n  if (!meta) {\n    meta = document.createElement(\"meta\");\n    meta.setAttribute(attribute, name);\n    document.head.appendChild(meta);\n  }\n  \n  meta.setAttribute(\"content\", content);\n}\n\nfunction updateLinkTag(rel: string, href: string) {\n  let link = document.querySelector(`link[rel=\"${rel}\"]`);\n  \n  if (!link) {\n    link = document.createElement(\"link\");\n    link.setAttribute(\"rel\", rel);\n    document.head.appendChild(link);\n  }\n  \n  link.setAttribute(\"href\", href);\n}\n\nexport function generateJSONLD(type: \"Organization\" | \"BlogPosting\", data: any) {\n  const script = document.createElement(\"script\");\n  script.type = \"application/ld+json\";\n  \n  let jsonLD: any = {\n    \"@context\": \"https://schema.org\"\n  };\n\n  if (type === \"Organization\") {\n    jsonLD = {\n      ...jsonLD,\n      \"@type\": \"Organization\",\n      name: \"Deeds Without Debt\",\n      url: \"https://deedswithoutdebt.com\",\n      logo: \"https://deedswithoutdebt.com/logo.png\",\n      description: \"Alternative real estate investing newsletter focusing on tax deeds, tax liens, and probate deals\",\n      sameAs: [\n        \"https://linkedin.com/company/deeds-without-debt\"\n      ],\n      ...data\n    };\n  } else if (type === \"BlogPosting\") {\n    jsonLD = {\n      ...jsonLD,\n      \"@type\": \"BlogPosting\",\n      headline: data.title,\n      description: data.description,\n      image: data.image,\n      datePublished: data.datePublished,\n      dateModified: data.dateModified || data.datePublished,\n      author: {\n        \"@type\": \"Person\",\n        name: \"Ralph Biah\",\n        url: \"https://deedswithoutdebt.com/about\"\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: \"Deeds Without Debt\",\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: \"https://deedswithoutdebt.com/logo.png\"\n        }\n      },\n      mainEntityOfPage: {\n        \"@type\": \"WebPage\",\n        \"@id\": data.url\n      },\n      ...data\n    };\n  }\n\n  script.textContent = JSON.stringify(jsonLD);\n  \n  // Remove existing JSON-LD script if exists\n  const existing = document.querySelector('script[type=\"application/ld+json\"]');\n  if (existing) {\n    existing.remove();\n  }\n  \n  document.head.appendChild(script);\n}\n","size_bytes":3712},"client/src/lib/stateGuides.ts":{"content":"import * as yaml from 'js-yaml';\n\nexport interface StateGuide {\n  slug: string;\n  name: string;\n  type: 'deed' | 'lien' | 'hybrid' | 'tbd';\n  status: 'available' | 'coming_soon' | 'research';\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'tbd';\n  summary: string;\n  auctions_per_year: string;\n  format: string;\n  last_updated: string;\n}\n\ninterface StateGuideRegistry {\n  states: StateGuide[];\n}\n\nlet stateGuides: StateGuide[] = [];\nlet isLoaded = false;\n\n// Cache for loaded state guides\nconst stateGuideCache = new Map<string, StateGuide>();\n\n// Load and parse the YAML registry\nexport async function loadStateGuides(): Promise<StateGuide[]> {\n  if (isLoaded) {\n    return stateGuides;\n  }\n\n  try {\n    const response = await fetch('/content/state-guides/index.yml');\n    if (!response.ok) {\n      throw new Error(`Failed to fetch state guides: ${response.statusText}`);\n    }\n    \n    const yamlContent = await response.text();\n    const registry = yaml.load(yamlContent) as StateGuideRegistry;\n    \n    if (!registry || !registry.states) {\n      throw new Error('Invalid state guides registry format');\n    }\n\n    // Validate required fields\n    for (const state of registry.states) {\n      validateStateGuide(state);\n    }\n\n    // Check for duplicate slugs\n    const slugs = new Set();\n    for (const state of registry.states) {\n      if (slugs.has(state.slug)) {\n        throw new Error(`Duplicate slug found: ${state.slug}`);\n      }\n      slugs.add(state.slug);\n    }\n\n    stateGuides = registry.states;\n    isLoaded = true;\n\n    // Cache individual states\n    stateGuides.forEach(guide => {\n      stateGuideCache.set(guide.slug, guide);\n    });\n\n    // Log warnings for incomplete data\n    const tbdStates = stateGuides.filter(s => s.type === 'tbd');\n    const researchStates = stateGuides.filter(s => s.status === 'research');\n    \n    if (tbdStates.length > 0) {\n      console.warn(`${tbdStates.length} states have type: tbd`, tbdStates.map(s => s.name));\n    }\n    \n    if (researchStates.length > 0) {\n      console.warn(`${researchStates.length} states need research`, researchStates.map(s => s.name));\n    }\n\n    return stateGuides;\n  } catch (error) {\n    console.error('Error loading state guides:', error);\n    throw error;\n  }\n}\n\n// Validate a single state guide\nfunction validateStateGuide(state: any): asserts state is StateGuide {\n  const requiredFields = ['slug', 'name', 'type', 'status', 'difficulty', 'summary', 'auctions_per_year', 'format', 'last_updated'];\n  \n  for (const field of requiredFields) {\n    if (!(field in state) || state[field] === undefined || state[field] === null) {\n      throw new Error(`Missing required field '${field}' in state: ${state.name || 'unknown'}`);\n    }\n  }\n\n  // Validate enum values\n  const validTypes = ['deed', 'lien', 'hybrid', 'tbd'];\n  const validStatuses = ['available', 'coming_soon', 'research'];\n  const validDifficulties = ['beginner', 'intermediate', 'advanced', 'tbd'];\n\n  if (!validTypes.includes(state.type)) {\n    throw new Error(`Invalid type '${state.type}' for state ${state.name}`);\n  }\n\n  if (!validStatuses.includes(state.status)) {\n    throw new Error(`Invalid status '${state.status}' for state ${state.name}`);\n  }\n\n  if (!validDifficulties.includes(state.difficulty)) {\n    throw new Error(`Invalid difficulty '${state.difficulty}' for state ${state.name}`);\n  }\n}\n\n// Get a specific state by slug\nexport async function getState(slug: string): Promise<StateGuide | null> {\n  // Check cache first\n  if (stateGuideCache.has(slug)) {\n    return stateGuideCache.get(slug)!;\n  }\n\n  // Load all states if not loaded yet\n  await loadStateGuides();\n  \n  return stateGuideCache.get(slug) || null;\n}\n\n// List all states\nexport async function listStates(): Promise<StateGuide[]> {\n  return await loadStateGuides();\n}\n\n// Filter helpers\nexport function filterByType(states: StateGuide[], type: StateGuide['type'] | 'all'): StateGuide[] {\n  if (type === 'all') return states;\n  return states.filter(state => state.type === type);\n}\n\nexport function filterByStatus(states: StateGuide[], status: StateGuide['status'] | 'all'): StateGuide[] {\n  if (status === 'all') return states;\n  return states.filter(state => state.status === status);\n}\n\nexport function filterToVerify(states: StateGuide[]): StateGuide[] {\n  return states.filter(state => state.status === 'research');\n}\n\n// Search helpers\nexport function searchStates(states: StateGuide[], query: string): StateGuide[] {\n  if (!query.trim()) return states;\n  \n  const lowerQuery = query.toLowerCase();\n  return states.filter(state => \n    state.name.toLowerCase().includes(lowerQuery) ||\n    state.summary.toLowerCase().includes(lowerQuery) ||\n    state.type.toLowerCase().includes(lowerQuery) ||\n    state.status.toLowerCase().includes(lowerQuery)\n  );\n}","size_bytes":4794},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import { useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport NewsletterForm from \"@/components/NewsletterForm\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { Link } from \"wouter\";\n\nexport default function About() {\n  useEffect(() => {\n    setSEOData({\n      title: \"About Ralph Biah | Deeds Without Debt\",\n      description: \"Learn about Ralph Biah's journey in alternative real estate investing and his mission to teach others how to buy properties without traditional bank financing.\",\n      canonical: \"/about\"\n    });\n  }, []);\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Hero Section */}\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-16\">\n            <div className=\"lg:order-last\">\n              <img\n                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=1000\"\n                alt=\"Professional headshot of Ralph Biah, real estate investor and newsletter author\"\n                className=\"rounded-xl shadow-lg w-full h-auto max-w-md mx-auto lg:mx-0\"\n                loading=\"lazy\"\n              />\n            </div>\n            <div>\n              <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n                About Ralph Biah\n              </h1>\n              <p className=\"font-sans text-xl text-muted-foreground mb-8 leading-relaxed\">\n                Real estate investor, educator, and author of the Deeds Without Debt newsletter. \n                Specializing in alternative acquisition strategies that don't require traditional bank financing.\n              </p>\n              <div className=\"flex gap-4\">\n                <Button \n                  asChild\n                  className=\"bg-primary text-primary-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-secondary transition-colors\"\n                  data-testid=\"button-subscribe-about\"\n                >\n                  <Link href=\"/subscribe\">Subscribe to Newsletter</Link>\n                </Button>\n                <Button \n                  variant=\"outline\"\n                  className=\"border border-border text-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                  data-testid=\"button-linkedin-about\"\n                >\n                  Connect on LinkedIn\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Biography */}\n          <div className=\"prose prose-lg max-w-4xl mx-auto mb-16\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6\">My Journey</h2>\n            \n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              I started my real estate investing journey like most people – looking at traditional rental properties and trying to secure bank loans. \n              But after facing rejection after rejection from lenders, I discovered there was an entirely different world of real estate acquisition \n              that didn't require banks, credit checks, or traditional mortgages.\n            </p>\n\n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              Over the past 8 years, I've acquired properties through tax deed auctions, tax lien certificates, HOA foreclosures, and probate deals \n              across 12 states. My portfolio includes everything from vacant lots to residential homes, commercial buildings, and raw land.\n            </p>\n\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4 mt-8\">The Catron County Success</h3>\n            \n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              My biggest win came from a tax deed auction in Catron County, New Mexico. I purchased a 5-acre property with a small cabin for $17,000. \n              After researching the local zoning laws, I discovered I could subdivide the property. I sold the cabin on 1 acre for $75,000 and \n              the remaining 4 acres for $45,000 – turning my $17,000 investment into $120,000 in just 18 months.\n            </p>\n\n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              This deal taught me that the real money in alternative real estate investing isn't just in buying properties cheap – \n              it's in understanding how to unlock their hidden value through subdivision, zoning changes, or creative financing strategies.\n            </p>\n\n            <h3 className=\"font-serif text-2xl font-bold text-foreground mb-4 mt-8\">Teaching Others</h3>\n            \n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              After achieving consistent success with these strategies, I began sharing my knowledge through workshops, online courses, \n              and eventually this newsletter. I've helped hundreds of investors discover opportunities they never knew existed, \n              from courthouse steps to probate court filings.\n            </p>\n\n            <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n              The Deeds Without Debt newsletter was born from my desire to document real deals, share practical strategies, \n              and help others navigate the often-complex world of alternative real estate investing. Every issue contains \n              actionable insights based on real experience – no theory, no fluff, just proven strategies that work.\n            </p>\n          </div>\n\n          {/* Mission */}\n          <div className=\"bg-primary/5 rounded-xl p-8 lg:p-12 mb-16\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6 text-center\">Mission Statement</h2>\n            <p className=\"font-sans text-xl text-muted-foreground text-center leading-relaxed max-w-3xl mx-auto mb-8\">\n              To democratize real estate investing by teaching alternative acquisition strategies that don't require \n              traditional bank financing, perfect credit, or large down payments. Everyone deserves the opportunity \n              to build wealth through real estate.\n            </p>\n            <div className=\"grid md:grid-cols-3 gap-6 text-center\">\n              <div>\n                <h3 className=\"font-mono font-bold text-2xl text-primary mb-2\">500+</h3>\n                <p className=\"font-sans text-muted-foreground\">Students Taught</p>\n              </div>\n              <div>\n                <h3 className=\"font-mono font-bold text-2xl text-primary mb-2\">$2M+</h3>\n                <p className=\"font-sans text-muted-foreground\">Personal Portfolio Value</p>\n              </div>\n              <div>\n                <h3 className=\"font-mono font-bold text-2xl text-primary mb-2\">12</h3>\n                <p className=\"font-sans text-muted-foreground\">States Invested In</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Disclaimer */}\n          <div className=\"bg-accent/10 rounded-lg p-6 mb-12\">\n            <h3 className=\"font-serif text-xl font-bold text-foreground mb-3\">Important Disclaimer</h3>\n            <p className=\"font-sans text-sm text-muted-foreground leading-relaxed\">\n              The information provided in this newsletter and website is for educational purposes only and does not constitute investment advice. \n              Real estate investing involves risk, and past performance does not guarantee future results. Always consult with qualified \n              professionals including attorneys, accountants, and real estate professionals before making investment decisions. \n              Due diligence is essential for every deal.\n            </p>\n          </div>\n\n          {/* Newsletter CTA */}\n          <div className=\"text-center\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-4\">Ready to Get Started?</h2>\n            <p className=\"font-sans text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Join thousands of investors who receive weekly insights on alternative real estate strategies. \n              No spam, no fluff – just actionable information you can use.\n            </p>\n            <NewsletterForm className=\"max-w-md mx-auto\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8561},"client/src/pages/AlaskaGuide.tsx":{"content":"import { useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card } from \"@/components/ui/card\";\nimport NewsletterForm from \"@/components/NewsletterForm\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { Link } from \"wouter\";\nimport { Calendar, MapPin, DollarSign, AlertTriangle, CheckCircle } from \"lucide-react\";\n\nexport default function AlaskaGuide() {\n  useEffect(() => {\n    setSEOData({\n      title: \"Alaska Tax Sales Guide | Deeds Without Debt\",\n      description: \"Complete guide to Alaska tax deed investing. Learn about borough auctions, September 2025 opportunities, and unique Alaska strategies.\",\n      canonical: \"/state-guides/alaska\"\n    });\n  }, []);\n\n  const upcomingAuctions = [\n    {\n      borough: \"Matanuska-Susitna\",\n      date: \"September 15, 2025\",\n      properties: 45,\n      minimumBid: \"$2,500\",\n      location: \"Palmer Courthouse\"\n    },\n    {\n      borough: \"Fairbanks North Star\",\n      date: \"September 22, 2025\", \n      properties: 23,\n      minimumBid: \"$5,000\",\n      location: \"Fairbanks City Hall\"\n    },\n    {\n      borough: \"Anchorage Municipality\",\n      date: \"October 1, 2025\",\n      properties: 67,\n      minimumBid: \"$7,500\",\n      location: \"Anchorage Assembly Chambers\"\n    }\n  ];\n\n  const keyFeatures = [\n    {\n      title: \"No Right of Redemption\",\n      description: \"Alaska properties have no redemption period after tax deed sale\",\n      icon: <CheckCircle className=\"w-6 h-6\" />,\n      advantage: true\n    },\n    {\n      title: \"Borough Variations\",\n      description: \"Each borough has different rules and auction schedules\",\n      icon: <MapPin className=\"w-6 h-6\" />,\n      advantage: false\n    },\n    {\n      title: \"Winterization Required\",\n      description: \"Properties must be winterized by October 1st annually\",\n      icon: <AlertTriangle className=\"w-6 h-6\" />,\n      advantage: false\n    },\n    {\n      title: \"High ROI Potential\",\n      description: \"Average returns of 150-300% due to limited competition\",\n      icon: <DollarSign className=\"w-6 h-6\" />,\n      advantage: true\n    }\n  ];\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Button \n                asChild\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"text-primary hover:text-secondary font-sans\"\n                data-testid=\"button-back-to-state-guides\"\n              >\n                <Link href=\"/state-guides\">← Back to State Guides</Link>\n              </Button>\n            </div>\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-4\">\n              Alaska Tax Sales Guide\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground leading-relaxed\">\n              The complete guide to investing in Alaska tax deed auctions, including borough-specific strategies \n              and September 2025 opportunities.\n            </p>\n            <div className=\"flex items-center justify-center gap-6 mt-6 text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <Calendar className=\"w-4 h-4 text-primary\" />\n                <span className=\"text-muted-foreground\">Updated December 2024</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <MapPin className=\"w-4 h-4 text-primary\" />\n                <span className=\"text-muted-foreground\">19 Boroughs Covered</span>\n              </div>\n              <Badge className=\"bg-primary/10 text-primary px-3 py-1 rounded-full font-mono font-bold\">\n                INTERMEDIATE\n              </Badge>\n            </div>\n          </div>\n\n          {/* Hero Image */}\n          <div className=\"mb-12\">\n            <img\n              src=\"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1200&h=600\"\n              alt=\"Scenic Alaska wilderness landscape with mountains and forest\"\n              className=\"rounded-xl shadow-lg w-full h-80 object-cover\"\n              loading=\"lazy\"\n            />\n          </div>\n\n          {/* Key Features */}\n          <div className=\"mb-12\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6\">\n              Alaska Tax Sale Key Features\n            </h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {keyFeatures.map((feature, index) => (\n                <Card key={index} className={`p-6 ${feature.advantage ? 'border-green-200 bg-green-50' : 'border-yellow-200 bg-yellow-50'}`}>\n                  <div className=\"flex items-start gap-4\">\n                    <div className={`p-2 rounded-lg ${feature.advantage ? 'bg-green-100 text-green-600' : 'bg-yellow-100 text-yellow-600'}`}>\n                      {feature.icon}\n                    </div>\n                    <div>\n                      <h3 className=\"font-serif text-lg font-bold text-foreground mb-2\">\n                        {feature.title}\n                      </h3>\n                      <p className=\"font-sans text-muted-foreground text-sm\">\n                        {feature.description}\n                      </p>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Upcoming Auctions */}\n          <div className=\"mb-12\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6\">\n              September 2025 Auction Calendar\n            </h2>\n            <div className=\"space-y-4\">\n              {upcomingAuctions.map((auction, index) => (\n                <Card key={index} className=\"p-6\">\n                  <div className=\"grid md:grid-cols-4 gap-4 items-center\">\n                    <div>\n                      <h3 className=\"font-serif text-lg font-bold text-foreground\">\n                        {auction.borough}\n                      </h3>\n                      <p className=\"font-sans text-sm text-muted-foreground\">\n                        {auction.location}\n                      </p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-primary\">{auction.date}</p>\n                      <p className=\"font-sans text-xs text-muted-foreground\">Auction Date</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-primary\">{auction.properties}</p>\n                      <p className=\"font-sans text-xs text-muted-foreground\">Properties</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-primary\">{auction.minimumBid}</p>\n                      <p className=\"font-sans text-xs text-muted-foreground\">Min. Bid</p>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Strategy Section */}\n          <div className=\"mb-12\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6\">\n              Alaska Investment Strategy\n            </h2>\n            <div className=\"prose prose-lg max-w-none\">\n              <div className=\"bg-card rounded-xl shadow-sm border border-border p-8\">\n                <h3 className=\"font-serif text-xl font-bold text-foreground mb-4\">\n                  Why Alaska Works for Tax Deed Investing\n                </h3>\n                <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed\">\n                  Alaska's unique characteristics create exceptional opportunities for tax deed investors. \n                  The state's vast size, small population, and borough-based government system result in \n                  less competition and higher potential returns than most other states.\n                </p>\n                \n                <h4 className=\"font-serif text-lg font-bold text-foreground mb-3 mt-6\">\n                  Borough System Advantages\n                </h4>\n                <ul className=\"font-sans text-muted-foreground space-y-2 mb-6\">\n                  <li>• Each borough operates independently with its own auction rules</li>\n                  <li>• Smaller auction pools mean less bidding competition</li>\n                  <li>• Many boroughs have annual or bi-annual auctions only</li>\n                  <li>• Local knowledge gives significant advantages</li>\n                </ul>\n                \n                <h4 className=\"font-serif text-lg font-bold text-foreground mb-3\">\n                  Key Considerations\n                </h4>\n                <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6\">\n                  <p className=\"font-sans text-yellow-800 text-sm\">\n                    <strong>Important:</strong> Alaska properties require winterization by October 1st annually. \n                    Budget $2,000-$5,000 per property for proper winterization to prevent freeze damage.\n                  </p>\n                </div>\n                \n                <ul className=\"font-sans text-muted-foreground space-y-2\">\n                  <li>• Remote locations may require bush plane or boat access</li>\n                  <li>• Environmental hazards (permafrost, wildlife) need consideration</li>\n                  <li>• Limited local contractor availability in rural areas</li>\n                  <li>• Seasonal accessibility affects property values</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Newsletter CTA */}\n          <div className=\"text-center mb-12\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-4\">\n              Get Alaska Auction Updates\n            </h2>\n            <p className=\"font-sans text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Subscribe to receive detailed property lists, bidding strategies, and auction results \n              for each Alaska borough auction throughout 2025.\n            </p>\n            <NewsletterForm className=\"max-w-md mx-auto\" />\n          </div>\n\n          {/* Resources */}\n          <div className=\"bg-accent/10 rounded-xl p-8\">\n            <h2 className=\"font-serif text-2xl font-bold text-foreground mb-4 text-center\">\n              Alaska-Specific Resources\n            </h2>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <Button \n                variant=\"outline\"\n                className=\"border border-border text-foreground font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                data-testid=\"button-download-alaska-checklist\"\n              >\n                Download Alaska Auction Checklist\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border border-border text-foreground font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                data-testid=\"button-download-winterization-guide\"\n              >\n                Download Winterization Guide\n              </Button>\n            </div>\n            <div className=\"text-center mt-6\">\n              <Button \n                asChild\n                variant=\"link\"\n                className=\"text-primary hover:text-secondary font-mono font-semibold\"\n                data-testid=\"button-all-resources\"\n              >\n                <Link href=\"/resources\">View All Resources →</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":11925},"client/src/pages/Archive.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport SearchBar from \"@/components/SearchBar\";\nimport PostCard from \"@/components/PostCard\";\nimport Tag from \"@/components/Tag\";\nimport { getAllPosts, getUniqueTags } from \"@/lib/content\";\nimport { setSEOData } from \"@/lib/seo\";\nimport type { Post } from \"@/components/PostCard\";\n\nexport default function Archive() {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [filteredPosts, setFilteredPosts] = useState<Post[]>([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n\n  useEffect(() => {\n    setSEOData({\n      title: \"Newsletter Archive | Deeds Without Debt\",\n      description: \"Browse all issues of the Deeds Without Debt newsletter. Find insights on tax deeds, tax liens, HOA foreclosures, and probate deals.\",\n      canonical: \"/archive\"\n    });\n\n    const allPosts = getAllPosts();\n    const tags = getUniqueTags();\n    \n    setPosts(allPosts);\n    setFilteredPosts(allPosts);\n    setAvailableTags(tags);\n  }, []);\n\n  useEffect(() => {\n    let filtered = posts;\n\n    // Filter by search query\n    if (searchQuery.trim()) {\n      filtered = filtered.filter(post =>\n        post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        post.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()))\n      );\n    }\n\n    // Filter by selected tags\n    if (selectedTags.length > 0) {\n      filtered = filtered.filter(post =>\n        selectedTags.every(tag => post.tags.includes(tag))\n      );\n    }\n\n    setFilteredPosts(filtered);\n  }, [posts, searchQuery, selectedTags]);\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  const handleTagToggle = (tag: string) => {\n    setSelectedTags(prev =>\n      prev.includes(tag)\n        ? prev.filter(t => t !== tag)\n        : [...prev, tag]\n    );\n  };\n\n  const clearFilters = () => {\n    setSearchQuery(\"\");\n    setSelectedTags([]);\n  };\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-4\">\n              Newsletter Archive\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Explore all issues of the Deeds Without Debt newsletter. Find strategies, case studies, and insights on alternative real estate investing.\n            </p>\n          </div>\n\n          {/* Search and Filters */}\n          <div className=\"bg-card rounded-xl shadow-sm border border-border p-6 mb-8\">\n            <div className=\"space-y-6\">\n              <SearchBar\n                onSearch={handleSearch}\n                placeholder=\"Search articles, tags, or topics...\"\n                className=\"max-w-2xl mx-auto\"\n              />\n\n              {/* Tag Filters */}\n              <div>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"font-mono font-semibold text-foreground\">Filter by Topic</h3>\n                  {(selectedTags.length > 0 || searchQuery) && (\n                    <button\n                      onClick={clearFilters}\n                      className=\"text-sm text-primary hover:text-secondary font-sans transition-colors\"\n                      data-testid=\"button-clear-filters\"\n                    >\n                      Clear all filters\n                    </button>\n                  )}\n                </div>\n                <div className=\"flex flex-wrap gap-2\">\n                  {availableTags.map(tag => (\n                    <Tag\n                      key={tag}\n                      tag={tag}\n                      variant=\"filter\"\n                      isActive={selectedTags.includes(tag)}\n                      onClick={handleTagToggle}\n                    />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Results Count */}\n          <div className=\"flex items-center justify-between mb-8\">\n            <p className=\"font-sans text-muted-foreground\">\n              {filteredPosts.length} {filteredPosts.length === 1 ? 'article' : 'articles'}\n              {(searchQuery || selectedTags.length > 0) && ' found'}\n            </p>\n            {selectedTags.length > 0 && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-muted-foreground font-sans\">Active filters:</span>\n                <div className=\"flex gap-1\">\n                  {selectedTags.map(tag => (\n                    <Tag\n                      key={tag}\n                      tag={tag}\n                      onClick={() => handleTagToggle(tag)}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Posts Grid */}\n          {filteredPosts.length > 0 ? (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {filteredPosts.map(post => (\n                <PostCard key={post.slug} post={post} />\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <div className=\"w-16 h-16 bg-muted/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <svg className=\"w-8 h-8 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                </svg>\n              </div>\n              <h3 className=\"font-serif text-xl font-bold text-foreground mb-2\">No articles found</h3>\n              <p className=\"font-sans text-muted-foreground mb-4\">\n                Try adjusting your search terms or clearing some filters.\n              </p>\n              <button\n                onClick={clearFilters}\n                className=\"text-primary hover:text-secondary font-mono font-semibold transition-colors\"\n                data-testid=\"button-clear-filters-empty\"\n              >\n                Clear all filters\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6599},"client/src/pages/Home.tsx":{"content":"import Hero from \"@/components/Hero\";\nimport PinnedIssue from \"@/components/PinnedIssue\";\nimport NewsletterForm from \"@/components/NewsletterForm\";\nimport PostCard from \"@/components/PostCard\";\nimport CTABox from \"@/components/CTABox\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { FileText, Calculator, MessageSquare } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport { getAllPosts } from \"@/lib/content\";\nimport type { Post } from \"@/components/PostCard\";\n\nexport default function Home() {\n  const [latestPosts, setLatestPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    const posts = getAllPosts().slice(0, 3);\n    setLatestPosts(posts);\n  }, []);\n\n  return (\n    <div>\n      <Hero />\n      <PinnedIssue />\n      \n      {/* Latest Issues Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"flex items-center justify-between mb-12\">\n              <div>\n                <h3 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-2\">Latest Issues</h3>\n                <p className=\"font-sans text-lg text-muted-foreground\">Fresh insights delivered weekly</p>\n              </div>\n              <Button\n                asChild\n                variant=\"outline\"\n                className=\"hidden sm:block border border-border text-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                data-testid=\"button-view-all-issues\"\n              >\n                <Link href=\"/archive\">View All Issues</Link>\n              </Button>\n            </div>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {latestPosts.map((post) => (\n                <PostCard key={post.slug} post={post} />\n              ))}\n            </div>\n            \n            <div className=\"text-center mt-12\">\n              <Button\n                asChild\n                variant=\"outline\"\n                className=\"sm:hidden border border-border text-foreground px-8 py-3 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                data-testid=\"button-view-all-issues-mobile\"\n              >\n                <Link href=\"/archive\">View All Issues</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <NewsletterForm variant=\"hero\" />\n\n      {/* About Section */}\n      <section className=\"py-16 border-b border-border\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h3 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-6\">\n                  About Ralph Biah\n                </h3>\n                <div className=\"prose prose-lg max-w-none\">\n                  <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n                    I've been investing in real estate without traditional bank financing for over 8 years,\n                    acquiring properties through tax deed auctions, probate deals, and HOA foreclosures across 12 states.\n                  </p>\n                  <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n                    My biggest win was a $17,000 Catron County tax deed purchase that I subdivided and sold for $120,000.\n                    But more importantly, I've helped hundreds of investors discover these alternative strategies.\n                  </p>\n                  <p className=\"font-sans text-lg text-muted-foreground mb-8 leading-relaxed\">\n                    This newsletter shares the exact strategies, real deals, and hard-won lessons from the trenches of alternative real estate investing.\n                  </p>\n                </div>\n                <div className=\"flex gap-4\">\n                  <Button \n                    asChild\n                    variant=\"outline\"\n                    className=\"border border-border text-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                    data-testid=\"button-read-full-bio\"\n                  >\n                    <Link href=\"/about\">Read Full Bio</Link>\n                  </Button>\n                  <Button \n                    variant=\"link\"\n                    className=\"text-primary hover:text-secondary font-mono font-semibold text-sm transition-colors flex items-center gap-2 p-0\"\n                    data-testid=\"button-linkedin\"\n                  >\n                    Connect on LinkedIn →\n                  </Button>\n                </div>\n              </div>\n              <div className=\"lg:order-first\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=1000\"\n                  alt=\"Professional headshot of Ralph Biah, real estate investor and newsletter author\"\n                  className=\"rounded-xl shadow-lg w-full h-auto max-w-md mx-auto lg:mx-0\"\n                  loading=\"lazy\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Resources Preview Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"text-center mb-12\">\n              <h3 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-4\">Free Resources</h3>\n              <p className=\"font-sans text-lg text-muted-foreground max-w-2xl mx-auto\">\n                Download the tools and templates I use for every deal\n              </p>\n            </div>\n\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <CTABox\n                title=\"Tax Deed Checklist\"\n                description=\"Pre-auction research steps, bidding strategy, and post-purchase action items.\"\n                buttonText=\"Download Free\"\n                buttonHref=\"/resources\"\n                icon={<FileText className=\"w-8 h-8\" />}\n                variant=\"primary\"\n              />\n\n              <CTABox\n                title=\"No-Bank Offer Calculator\"\n                description=\"Excel spreadsheet to analyze deals and calculate your maximum offer price.\"\n                buttonText=\"Download Free\"\n                buttonHref=\"/resources\"\n                icon={<Calculator className=\"w-8 h-8\" />}\n                variant=\"secondary\"\n              />\n\n              <CTABox\n                title=\"Cold Call Scripts\"\n                description=\"Proven phone scripts for contacting probate attorneys and property owners.\"\n                buttonText=\"Download Free\"\n                buttonHref=\"/resources\"\n                icon={<MessageSquare className=\"w-8 h-8\" />}\n                variant=\"accent\"\n              />\n            </div>\n\n            <div className=\"text-center mt-12\">\n              <Button \n                asChild\n                variant=\"outline\"\n                className=\"border border-border text-foreground px-8 py-4 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                data-testid=\"button-view-all-resources\"\n              >\n                <Link href=\"/resources\">View All Resources</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":7736},"client/src/pages/Resources.tsx":{"content":"import { useEffect } from \"react\";\nimport CTABox from \"@/components/CTABox\";\nimport NewsletterForm from \"@/components/NewsletterForm\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { FileText, Calculator, MessageSquare, MapPin, BookOpen, CheckCircle } from \"lucide-react\";\n\nexport default function Resources() {\n  useEffect(() => {\n    setSEOData({\n      title: \"Free Resources | Deeds Without Debt\",\n      description: \"Download free tools, templates, and guides for alternative real estate investing. Tax deed checklists, calculators, scripts, and more.\",\n      canonical: \"/resources\"\n    });\n  }, []);\n\n  const resources = [\n    {\n      title: \"Tax Deed Checklist\",\n      description: \"Pre-auction research steps, bidding strategy, and post-purchase action items.\",\n      icon: <FileText className=\"w-8 h-8\" />,\n      variant: \"primary\" as const,\n      features: [\"20-point research checklist\", \"Bidding strategy worksheet\", \"Post-auction timeline\"]\n    },\n    {\n      title: \"No-Bank Offer Calculator\",\n      description: \"Excel spreadsheet to analyze deals and calculate your maximum offer price.\",\n      icon: <Calculator className=\"w-8 h-8\" />,\n      variant: \"secondary\" as const,\n      features: [\"Deal analysis formulas\", \"ROI calculations\", \"Risk assessment matrix\"]\n    },\n    {\n      title: \"Cold Call Scripts\",\n      description: \"Proven phone scripts for contacting probate attorneys and property owners.\",\n      icon: <MessageSquare className=\"w-8 h-8\" />,\n      variant: \"accent\" as const,\n      features: [\"4 different script variations\", \"Objection handling guide\", \"Follow-up templates\"]\n    },\n    {\n      title: \"State Research Guide\",\n      description: \"How to research tax deed laws, auction schedules, and redemption periods by state.\",\n      icon: <MapPin className=\"w-8 h-8\" />,\n      variant: \"primary\" as const,\n      features: [\"50-state comparison chart\", \"Research website directory\", \"Key contacts database\"]\n    },\n    {\n      title: \"Due Diligence Handbook\",\n      description: \"Complete property research methodology to avoid costly mistakes.\",\n      icon: <BookOpen className=\"w-8 h-8\" />,\n      variant: \"secondary\" as const,\n      features: [\"Title research process\", \"Lien investigation steps\", \"Environmental risk checks\"]\n    },\n    {\n      title: \"Auction Bid Tracker\",\n      description: \"Spreadsheet to track multiple auctions, properties, and bidding results.\",\n      icon: <CheckCircle className=\"w-8 h-8\" />,\n      variant: \"accent\" as const,\n      features: [\"Multi-auction tracking\", \"Performance analytics\", \"ROI tracking tools\"]\n    }\n  ];\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-16\">\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n              Free Resources\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Download the tools, templates, and guides I use for every deal. These resources have helped me \n              analyze hundreds of properties and close profitable transactions across 12 states.\n            </p>\n          </div>\n\n          {/* Resources Grid */}\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n            {resources.map((resource, index) => (\n              <div key={index} className=\"bg-card rounded-xl shadow-sm border border-border p-8 text-center hover:shadow-md transition-shadow\">\n                <div className={`w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6 ${\n                  resource.variant === \"secondary\" ? \"bg-secondary/10 text-secondary\" :\n                  resource.variant === \"accent\" ? \"bg-accent/20 text-accent-foreground\" :\n                  \"bg-primary/10 text-primary\"\n                }`}>\n                  {resource.icon}\n                </div>\n                \n                <h3 className=\"font-serif text-xl font-bold text-foreground mb-3\">\n                  {resource.title}\n                </h3>\n                \n                <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed\">\n                  {resource.description}\n                </p>\n\n                <ul className=\"font-sans text-sm text-muted-foreground mb-6 text-left space-y-1\">\n                  {resource.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-start gap-2\">\n                      <CheckCircle className=\"w-4 h-4 text-primary mt-0.5 flex-shrink-0\" />\n                      <span>{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                \n                <button \n                  className={`font-mono font-semibold transition-colors w-full px-6 py-3 rounded-lg ${\n                    resource.variant === \"secondary\" \n                      ? \"bg-secondary text-secondary-foreground hover:bg-primary\" \n                      : resource.variant === \"accent\"\n                      ? \"bg-accent text-accent-foreground hover:bg-primary hover:text-primary-foreground\"\n                      : \"bg-primary text-primary-foreground hover:bg-secondary\"\n                  }`}\n                  data-testid={`button-download-${resource.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  Download Free\n                </button>\n              </div>\n            ))}\n          </div>\n\n          {/* How to Use Section */}\n          <div className=\"bg-accent/10 rounded-xl p-8 lg:p-12 mb-16\">\n            <div className=\"grid lg:grid-cols-2 gap-8 items-start\">\n              <div>\n                <h2 className=\"font-serif text-3xl font-bold text-foreground mb-6\">\n                  How to Use These Resources\n                </h2>\n                <div className=\"space-y-4 font-sans text-muted-foreground\">\n                  <div className=\"flex gap-3\">\n                    <span className=\"bg-primary text-primary-foreground w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0 mt-0.5\">1</span>\n                    <p>Start with the <strong className=\"text-foreground\">State Research Guide</strong> to understand the laws in your target area</p>\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <span className=\"bg-primary text-primary-foreground w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0 mt-0.5\">2</span>\n                    <p>Use the <strong className=\"text-foreground\">Tax Deed Checklist</strong> to research properties before auction day</p>\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <span className=\"bg-primary text-primary-foreground w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0 mt-0.5\">3</span>\n                    <p>Run numbers with the <strong className=\"text-foreground\">Offer Calculator</strong> to determine your maximum bid</p>\n                  </div>\n                  <div className=\"flex gap-3\">\n                    <span className=\"bg-primary text-primary-foreground w-6 h-6 rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0 mt-0.5\">4</span>\n                    <p>Track your results with the <strong className=\"text-foreground\">Auction Bid Tracker</strong> to improve over time</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-card rounded-lg p-6\">\n                <h3 className=\"font-serif text-xl font-bold text-foreground mb-4\">\n                  💡 Pro Tip\n                </h3>\n                <p className=\"font-sans text-muted-foreground leading-relaxed\">\n                  These resources are most effective when used together as a complete system. \n                  Don't try to skip steps – the research and due diligence phase is where most \n                  profitable deals are found and most costly mistakes are avoided.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Newsletter CTA */}\n          <div className=\"text-center\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-4\">\n              Want More Advanced Strategies?\n            </h2>\n            <p className=\"font-sans text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              These free resources are just the beginning. Subscribe to the newsletter for \n              advanced techniques, real deal breakdowns, and insider insights you won't find anywhere else.\n            </p>\n            <NewsletterForm className=\"max-w-md mx-auto\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8844},"client/src/pages/StateGuidePage.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { useParams } from \"wouter\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { StateGuide, getState } from \"@/lib/stateGuides\";\nimport StateGuideRenderer from \"@/components/StateGuideRenderer\";\n\nexport default function StateGuidePage() {\n  const { slug } = useParams<{ slug: string }>();\n  const [guide, setGuide] = useState<StateGuide | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [notFound, setNotFound] = useState(false);\n\n  useEffect(() => {\n    const loadGuide = async () => {\n      if (!slug) {\n        setNotFound(true);\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const foundGuide = await getState(slug);\n        \n        if (foundGuide) {\n          setGuide(foundGuide);\n          \n          // Set SEO data with JSON-LD\n          setSEOData({\n            title: `${foundGuide.name} Tax Sales Guide | Deeds Without Debt`,\n            description: `${foundGuide.summary} Learn about ${foundGuide.type} investing in ${foundGuide.name} with our comprehensive guide.`,\n            canonical: `/state-guides/${slug}`,\n            jsonLd: {\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"Article\",\n              \"headline\": `${foundGuide.name} Tax Investment Guide`,\n              \"description\": foundGuide.summary,\n              \"author\": {\n                \"@type\": \"Organization\",\n                \"name\": \"Deeds Without Debt\"\n              },\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": \"Deeds Without Debt\",\n                \"url\": \"https://deedswithoutdebt.com\"\n              },\n              \"dateModified\": foundGuide.last_updated,\n              \"datePublished\": foundGuide.last_updated,\n              \"about\": [\"tax deeds\", \"tax liens\", `${foundGuide.name} tax foreclosure`],\n              \"url\": `https://deedswithoutdebt.com/state-guides/${slug}`\n            }\n          });\n        } else {\n          setNotFound(true);\n        }\n      } catch (error) {\n        console.error(\"Error loading state guide:\", error);\n        setNotFound(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadGuide();\n  }, [slug]);\n\n  if (loading) {\n    return (\n      <div className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"font-serif text-4xl font-bold text-foreground mb-6\">\n              Loading Guide...\n            </h1>\n            <p className=\"text-muted-foreground\">Please wait while we load the state guide.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (notFound || !guide) {\n    return (\n      <div className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h1 className=\"font-serif text-4xl font-bold text-foreground mb-6\">\n              Guide Not Found\n            </h1>\n            <p className=\"text-muted-foreground mb-8\">\n              The state guide you're looking for doesn't exist or hasn't been published yet.\n            </p>\n            <a \n              href=\"/state-guides\" \n              className=\"inline-flex items-center px-6 py-3 bg-primary text-primary-foreground rounded-lg font-mono font-semibold hover:bg-secondary transition-colors\"\n            >\n              Back to State Guides\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <StateGuideRenderer guide={guide} />;\n}","size_bytes":3536},"client/src/pages/StateGuides.tsx":{"content":"import { useEffect, useState, useMemo } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { Link, useSearch, useLocation } from \"wouter\";\nimport { MapPin, Search, Settings } from \"lucide-react\";\nimport { StateGuide, listStates } from \"@/lib/stateGuides\";\nimport { StateCard } from \"@/components/ui/StateCard\";\nimport { TypeTabs } from \"@/components/ui/TypeTabs\";\nimport { EmptyState } from \"@/components/ui/EmptyState\";\nimport Fuse from 'fuse.js';\n\nexport default function StateGuides() {\n  const [stateGuides, setStateGuides] = useState<StateGuide[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [statusFilters, setStatusFilters] = useState<string[]>(['available', 'coming_soon', 'research']);\n  const [showFilters, setShowFilters] = useState(false);\n  const searchParams = useSearch();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    setSEOData({\n      title: \"State Investment Guides | Deeds Without Debt\",\n      description: \"Guides to tax deed, tax lien, and hybrid (redeemable deed) investing by state. Learn auction schedules, redemption periods, and investment opportunities across all 50 states plus Washington DC.\",\n      canonical: \"/state-guides\"\n    });\n\n    // Load saved preferences from localStorage\n    const savedSearch = localStorage.getItem('stateGuides.search') || '';\n    const savedType = localStorage.getItem('stateGuides.type') || 'all';\n    const savedStatus = JSON.parse(localStorage.getItem('stateGuides.status') || '[\"available\", \"coming_soon\", \"research\"]');\n\n    // Parse URL params\n    const params = new URLSearchParams(searchParams);\n    const urlType = params.get('type');\n    const urlSearch = params.get('q');\n    const urlStatus = params.get('status')?.split(',') || savedStatus;\n\n    // Set initial state from URL or localStorage\n    setSearchQuery(urlSearch || savedSearch);\n    setActiveFilter(urlType || savedType);\n    setStatusFilters(urlStatus);\n\n    listStates().then((guides) => {\n      setStateGuides(guides);\n      setLoading(false);\n    });\n  }, [searchParams]);\n\n  // Update URL and localStorage when filters change\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (searchQuery) params.set('q', searchQuery);\n    if (activeFilter !== 'all') params.set('type', activeFilter);\n    if (statusFilters.length !== 3) params.set('status', statusFilters.join(','));\n    \n    const newUrl = `/state-guides${params.toString() ? '?' + params.toString() : ''}`;\n    if (window.location.pathname + window.location.search !== newUrl) {\n      window.history.replaceState({}, '', newUrl);\n    }\n\n    // Save to localStorage\n    localStorage.setItem('stateGuides.search', searchQuery);\n    localStorage.setItem('stateGuides.type', activeFilter);\n    localStorage.setItem('stateGuides.status', JSON.stringify(statusFilters));\n  }, [searchQuery, activeFilter, statusFilters]);\n\n  // Initialize Fuse.js for fuzzy search\n  const fuse = useMemo(() => {\n    if (!stateGuides.length) return null;\n    return new Fuse(stateGuides, {\n      keys: ['name', 'summary'],\n      threshold: 0.3,\n      includeScore: true\n    });\n  }, [stateGuides]);\n\n  // Filter and search logic\n  const filteredGuides = useMemo(() => {\n    let guides = stateGuides;\n\n    // Apply status filter first\n    guides = guides.filter(guide => statusFilters.includes(guide.status));\n\n    // Apply search with fuzzy matching\n    if (searchQuery.trim() && fuse) {\n      const searchResults = fuse.search(searchQuery);\n      const searchedGuides = searchResults.map(result => result.item);\n      guides = guides.filter(guide => searchedGuides.includes(guide));\n    }\n\n    // Apply type filter\n    if (activeFilter === 'verify') {\n      guides = guides.filter(guide => guide.status === 'research');\n    } else if (activeFilter !== 'all') {\n      guides = guides.filter(guide => guide.type === activeFilter);\n    }\n\n    return guides;\n  }, [stateGuides, activeFilter, searchQuery, statusFilters, fuse]);\n\n  const handleStatusChange = (status: string, checked: boolean) => {\n    if (checked) {\n      setStatusFilters(prev => [...prev, status]);\n    } else {\n      setStatusFilters(prev => prev.filter(s => s !== status));\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"bg-primary text-primary-foreground\";\n      case \"coming_soon\":\n        return \"bg-muted text-muted-foreground\";\n      case \"research\":\n        return \"bg-muted text-muted-foreground\";\n      default:\n        return \"bg-muted text-muted-foreground\";\n    }\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"Available\";\n      case \"coming_soon\":\n        return \"Coming Soon\";\n      case \"research\":\n        return \"Research\";\n      default:\n        return \"TBD\";\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty.toLowerCase()) {\n      case \"beginner\":\n        return \"text-green-600\";\n      case \"intermediate\":\n        return \"text-yellow-600\";\n      case \"advanced\":\n        return \"text-red-600\";\n      default:\n        return \"text-muted-foreground\";\n    }\n  };\n\n  const formatDifficulty = (difficulty: string) => {\n    if (difficulty === 'tbd') return 'TBD';\n    return difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n  };\n\n  // Get featured guide (Alaska)\n  const featuredGuide = stateGuides.find(guide => guide.slug === 'alaska');\n\n  if (loading) {\n    return (\n      <div className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"text-center\">\n              <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n                Loading State Guides...\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-16\">\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n              State Investment Guides\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Comprehensive guides to tax deed and tax lien investing by state. Learn the specific laws, \n              auction schedules, and strategies that work in each jurisdiction.\n            </p>\n          </div>\n\n          {/* Featured Guide */}\n          {featuredGuide && (\n            <div className=\"bg-primary/5 rounded-xl p-8 lg:p-12 mb-12 border border-primary/20\">\n              <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n                <div>\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <Badge className=\"bg-primary text-primary-foreground px-3 py-1 rounded-full font-mono font-bold text-sm\">\n                      FEATURED GUIDE\n                    </Badge>\n                    <span className=\"text-muted-foreground font-sans text-sm\">Updated {featuredGuide.last_updated}</span>\n                  </div>\n                  <h2 className=\"font-serif text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n                    {featuredGuide.name} Tax Investment Guide\n                  </h2>\n                  <p className=\"font-sans text-lg text-muted-foreground mb-6 leading-relaxed\">\n                    {featuredGuide.summary}\n                  </p>\n                  <div className=\"grid sm:grid-cols-3 gap-4 mb-6\">\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-2xl text-primary\">3 Sales</p>\n                      <p className=\"font-sans text-sm text-muted-foreground\">Avg/2 Years</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-2xl text-primary\">150–300%</p>\n                      <p className=\"font-sans text-sm text-muted-foreground\">ROI Range</p>\n                    </div>\n                    <div className=\"text-center\">\n                      <p className=\"font-mono font-bold text-2xl text-primary\">19 Boroughs</p>\n                      <p className=\"font-sans text-sm text-muted-foreground\">Covered</p>\n                    </div>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground mb-6 italic\">*Example estimates based on available data</p>\n                  <Button \n                    asChild\n                    className=\"bg-primary text-primary-foreground px-8 py-3 rounded-lg font-mono font-bold hover:bg-secondary transition-colors\"\n                    data-testid={`button-read-${featuredGuide.slug}-guide`}\n                  >\n                    <Link href={`/state-guides/${featuredGuide.slug}`}>Read Alaska Guide</Link>\n                  </Button>\n                </div>\n                <div>\n                  <img\n                    src=\"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n                    alt={`${featuredGuide.name} landscape for tax investing opportunities`}\n                    className=\"rounded-lg shadow-lg w-full h-auto\"\n                    loading=\"lazy\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Search and Filters */}\n          <div className=\"mb-12\">\n            <div className=\"max-w-md mx-auto mb-6\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search states...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"input-search-states\"\n                />\n              </div>\n            </div>\n\n            <TypeTabs value={activeFilter} onValueChange={setActiveFilter} />\n\n            <div className=\"mt-8\">\n              <div className=\"text-center mb-6\">\n                <p className=\"text-sm text-muted-foreground\">\n                  Showing {filteredGuides.length} {activeFilter === 'all' ? 'states' : \n                    activeFilter === 'verify' ? 'states to verify' : `${activeFilter} states`}\n                  {searchQuery && ` matching \"${searchQuery}\"`}\n                </p>\n              </div>\n              \n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {filteredGuides.length > 0 ? (\n                  filteredGuides.map((guide) => (\n                    <StateCard key={guide.slug} guide={guide} />\n                  ))\n                ) : (\n                  <EmptyState \n                    title=\"No states found\"\n                    description=\"Try adjusting your search or filter criteria.\"\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Request Guide */}\n          <div className=\"bg-card rounded-xl shadow-sm border border-border p-8 text-center\">\n            <div className=\"max-w-2xl mx-auto\">\n              <MapPin className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n              <h2 className=\"font-serif text-2xl font-bold text-foreground mb-4\">\n                Don't See Your State?\n              </h2>\n              <p className=\"font-sans text-muted-foreground mb-6 leading-relaxed\">\n                I'm constantly researching new states and updating existing guides. \n                Let me know which state you'd like to see covered next, and I'll prioritize it for the newsletter.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                <Button \n                  className=\"bg-primary text-primary-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-secondary transition-colors\"\n                  data-testid=\"button-request-state-guide\"\n                >\n                  Request a State Guide\n                </Button>\n                <Button \n                  asChild\n                  variant=\"outline\"\n                  className=\"border border-border text-foreground px-6 py-3 rounded-lg font-mono font-semibold hover:bg-accent hover:text-accent-foreground transition-colors\"\n                  data-testid=\"button-subscribe-updates\"\n                >\n                  <Link href=\"/subscribe\">Subscribe for Updates</Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":13148},"client/src/pages/Subscribe.tsx":{"content":"import { useEffect } from \"react\";\nimport NewsletterForm from \"@/components/NewsletterForm\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { setSEOData } from \"@/lib/seo\";\nimport { Link } from \"wouter\";\nimport { CheckCircle, Clock, Shield, Users, TrendingUp, BookOpen } from \"lucide-react\";\n\nexport default function Subscribe() {\n  useEffect(() => {\n    setSEOData({\n      title: \"Subscribe to Newsletter | Deeds Without Debt\",\n      description: \"Join thousands of investors learning alternative real estate strategies. Get weekly insights on tax deeds, tax liens, HOA foreclosures, and probate deals.\",\n      canonical: \"/subscribe\"\n    });\n  }, []);\n\n  const benefits = [\n    {\n      icon: <Clock className=\"w-6 h-6\" />,\n      title: \"Weekly Delivery\",\n      description: \"Fresh content delivered to your inbox every Tuesday morning\"\n    },\n    {\n      icon: <Shield className=\"w-6 h-6\" />,\n      title: \"No Spam Policy\",\n      description: \"We respect your inbox. No ads, no affiliate spam, just valuable content\"\n    },\n    {\n      icon: <Users className=\"w-6 h-6\" />,\n      title: \"Join 5,000+ Investors\",\n      description: \"Be part of a growing community of alternative real estate investors\"\n    },\n    {\n      icon: <TrendingUp className=\"w-6 h-6\" />,\n      title: \"Real Deal Analysis\",\n      description: \"See actual deals with numbers, strategies, and outcomes\"\n    },\n    {\n      icon: <BookOpen className=\"w-6 h-6\" />,\n      title: \"Educational Focus\",\n      description: \"Learn proven strategies from 8+ years of investing experience\"\n    },\n    {\n      icon: <CheckCircle className=\"w-6 h-6\" />,\n      title: \"Actionable Insights\",\n      description: \"Every issue includes specific steps you can take immediately\"\n    }\n  ];\n\n  const testimonials = [\n    {\n      quote: \"Ralph's newsletter opened my eyes to opportunities I never knew existed. I closed my first tax deed deal within 3 months of subscribing.\",\n      author: \"Sarah M.\",\n      location: \"Phoenix, AZ\"\n    },\n    {\n      quote: \"The real-world examples and case studies are invaluable. No theory – just practical strategies that actually work.\",\n      author: \"Mike T.\",\n      location: \"Denver, CO\"\n    },\n    {\n      quote: \"I've learned more about alternative real estate investing from this newsletter than from years of expensive courses.\",\n      author: \"Jennifer L.\",\n      location: \"Austin, TX\"\n    }\n  ];\n\n  return (\n    <div className=\"py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Header */}\n          <div className=\"text-center mb-12\">\n            <h1 className=\"font-serif text-4xl lg:text-5xl font-bold text-foreground mb-6\">\n              Subscribe to Deeds Without Debt\n            </h1>\n            <p className=\"font-sans text-xl text-muted-foreground max-w-2xl mx-auto leading-relaxed\">\n              Join thousands of investors learning how to buy real estate without banks. \n              Get weekly insights on tax deeds, tax liens, HOA foreclosures, and probate deals.\n            </p>\n          </div>\n\n          {/* Newsletter Form */}\n          <div className=\"bg-card rounded-xl shadow-sm border border-border p-8 mb-12\">\n            <div className=\"text-center mb-6\">\n              <h2 className=\"font-serif text-2xl font-bold text-foreground mb-2\">Get Started Today</h2>\n              <p className=\"font-sans text-muted-foreground\">Free newsletter, no credit card required</p>\n            </div>\n            <NewsletterForm className=\"max-w-md mx-auto\" />\n            <div className=\"flex items-center justify-center gap-6 mt-6 text-sm text-muted-foreground\">\n              <div className=\"flex items-center gap-2\">\n                <CheckCircle className=\"w-4 h-4 text-primary\" />\n                <span className=\"font-sans\">Free forever</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-4 h-4 text-primary\" />\n                <span className=\"font-sans\">No spam</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"w-4 h-4 text-primary\" />\n                <span className=\"font-sans\">Unsubscribe anytime</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Benefits Grid */}\n          <div className=\"mb-16\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground text-center mb-8\">\n              What You'll Get\n            </h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {benefits.map((benefit, index) => (\n                <Card key={index} className=\"p-6 text-center hover:shadow-md transition-shadow\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4 text-primary\">\n                    {benefit.icon}\n                  </div>\n                  <h3 className=\"font-serif text-lg font-bold text-foreground mb-2\">\n                    {benefit.title}\n                  </h3>\n                  <p className=\"font-sans text-muted-foreground text-sm\">\n                    {benefit.description}\n                  </p>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Sample Content */}\n          <div className=\"bg-accent/10 rounded-xl p-8 mb-16\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground text-center mb-8\">\n              Recent Issue Highlights\n            </h2>\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <div>\n                <h3 className=\"font-serif text-xl font-bold text-foreground mb-3\">\n                  Issue #4: Alaska Tax Sales Deep Dive\n                </h3>\n                <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed\">\n                  Complete breakdown of Alaska's unique borough system, upcoming September 2025 auction calendar, \n                  and why the state offers some of the best tax deed opportunities in the country.\n                </p>\n                <ul className=\"font-sans text-sm text-muted-foreground space-y-1\">\n                  <li>• 12 upcoming auctions with property details</li>\n                  <li>• Borough-by-borough bidding strategies</li>\n                  <li>• Winterization requirements and costs</li>\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"font-serif text-xl font-bold text-foreground mb-3\">\n                  Issue #3: $17K to $120K Case Study\n                </h3>\n                <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed\">\n                  Complete walkthrough of my Catron County, NM deal including initial research, \n                  auction strategy, subdivision process, and final sale details.\n                </p>\n                <ul className=\"font-sans text-sm text-muted-foreground space-y-1\">\n                  <li>• Pre-auction research checklist</li>\n                  <li>• Subdivision feasibility analysis</li>\n                  <li>• Marketing strategy for rural properties</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Testimonials */}\n          <div className=\"mb-16\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground text-center mb-8\">\n              What Subscribers Say\n            </h2>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              {testimonials.map((testimonial, index) => (\n                <Card key={index} className=\"p-6\">\n                  <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed italic\">\n                    \"{testimonial.quote}\"\n                  </p>\n                  <div className=\"border-t pt-4\">\n                    <p className=\"font-serif font-bold text-foreground\">{testimonial.author}</p>\n                    <p className=\"font-sans text-sm text-muted-foreground\">{testimonial.location}</p>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Final CTA */}\n          <div className=\"text-center\">\n            <h2 className=\"font-serif text-3xl font-bold text-foreground mb-4\">\n              Ready to Start Learning?\n            </h2>\n            <p className=\"font-sans text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Join the community of investors who are building wealth through alternative real estate strategies. \n              Your first issue will arrive within 24 hours.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n              <NewsletterForm className=\"max-w-md\" />\n            </div>\n            <div className=\"mt-8 pt-8 border-t border-border\">\n              <p className=\"font-sans text-sm text-muted-foreground\">\n                Want to see what you're signing up for?{\" \"}\n                <Button\n                  asChild\n                  variant=\"link\"\n                  className=\"text-primary hover:text-secondary font-mono font-semibold p-0\"\n                  data-testid=\"button-browse-archive\"\n                >\n                  <Link href=\"/archive\">Browse our archive</Link>\n                </Button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9450},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/EmptyState.tsx":{"content":"import { MapPin } from \"lucide-react\";\n\ninterface EmptyStateProps {\n  title?: string;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nexport function EmptyState({ \n  title = \"No results found\", \n  description = \"Try adjusting your search or filter criteria.\",\n  children \n}: EmptyStateProps) {\n  return (\n    <div className=\"col-span-full text-center py-12\">\n      <MapPin className=\"w-12 h-12 text-muted-foreground mx-auto mb-4 opacity-50\" />\n      <h3 className=\"font-serif text-lg font-semibold text-foreground mb-2\">\n        {title}\n      </h3>\n      <p className=\"text-muted-foreground mb-6\">\n        {description}\n      </p>\n      {children}\n    </div>\n  );\n}","size_bytes":674},"client/src/components/ui/FactsPanel.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { StateBadge } from \"@/components/ui/StateBadge\";\nimport { Calendar, FileText, Target, Clock } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { StateGuide } from \"@/lib/stateGuides\";\n\ninterface FactsPanelProps {\n  guide: StateGuide;\n}\n\nexport function FactsPanel({ guide }: FactsPanelProps) {\n  const formatDifficulty = (difficulty: string) => {\n    if (difficulty === 'tbd') return 'TBD';\n    return difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case \"beginner\":\n        return \"text-green-600\";\n      case \"intermediate\":\n        return \"text-yellow-600\";\n      case \"advanced\":\n        return \"text-red-600\";\n      default:\n        return \"text-muted-foreground\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Quick Facts */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-serif text-lg\">Quick Facts</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center gap-3\">\n            <Target className=\"w-4 h-4 text-primary\" />\n            <div>\n              <p className=\"font-mono font-semibold text-sm\">{guide.type.toUpperCase()} System</p>\n              <p className=\"text-xs text-muted-foreground\">Investment Type</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <FileText className=\"w-4 h-4 text-primary\" />\n            <div>\n              <p className=\"font-mono font-semibold text-sm capitalize\">{formatDifficulty(guide.difficulty)}</p>\n              <p className=\"text-xs text-muted-foreground\">Difficulty Level</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <Calendar className=\"w-4 h-4 text-primary\" />\n            <div>\n              <p className=\"font-mono font-semibold text-sm\">{guide.auctions_per_year}</p>\n              <p className=\"text-xs text-muted-foreground\">Auction Frequency</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <Clock className=\"w-4 h-4 text-primary\" />\n            <div>\n              <p className=\"font-mono font-semibold text-sm\">{guide.format}</p>\n              <p className=\"text-xs text-muted-foreground\">Format</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Status & Last Updated */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"space-y-3\">\n            <div>\n              <p className=\"text-sm text-muted-foreground mb-2\">Status</p>\n              <StateBadge status={guide.status} />\n            </div>\n            <div>\n              <p className=\"text-sm text-muted-foreground\">Last Updated</p>\n              <p className=\"font-mono text-sm font-semibold\">{guide.last_updated}</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* CTA */}\n      <Card className=\"bg-primary/5 border-primary/20\">\n        <CardContent className=\"pt-6 text-center\">\n          <h3 className=\"font-serif text-lg font-bold mb-2\">Get County Checklists</h3>\n          <p className=\"text-sm text-muted-foreground mb-4 leading-relaxed\">\n            Detailed county-by-county research checklists and property analysis worksheets.\n          </p>\n          <Button \n            asChild\n            className=\"w-full bg-primary text-primary-foreground font-mono font-semibold hover:bg-secondary transition-colors\"\n            data-testid=\"button-subscribe-county-checklists\"\n          >\n            <Link href=\"/subscribe\">Get Checklists</Link>\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":3903},"client/src/components/ui/StateBadge.tsx":{"content":"import { Badge } from \"@/components/ui/badge\";\n\ninterface StateBadgeProps {\n  status: 'available' | 'coming_soon' | 'research';\n}\n\nexport function StateBadge({ status }: StateBadgeProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"bg-primary text-primary-foreground\";\n      case \"coming_soon\":\n        return \"bg-muted text-muted-foreground\";\n      case \"research\":\n        return \"bg-muted text-muted-foreground\";\n      default:\n        return \"bg-muted text-muted-foreground\";\n    }\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"Available\";\n      case \"coming_soon\":\n        return \"Coming Soon\";\n      case \"research\":\n        return \"Research\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  return (\n    <Badge className={`px-3 py-1 rounded-full font-mono font-bold text-xs ${getStatusColor(status)}`}>\n      {getStatusLabel(status)}\n    </Badge>\n  );\n}","size_bytes":1002},"client/src/components/ui/StateCard.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { StateBadge } from \"@/components/ui/StateBadge\";\nimport { Calendar, DollarSign, FileText } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { StateGuide } from \"@/lib/stateGuides\";\n\ninterface StateCardProps {\n  guide: StateGuide;\n}\n\nexport function StateCard({ guide }: StateCardProps) {\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case \"beginner\":\n        return \"text-green-600\";\n      case \"intermediate\":\n        return \"text-yellow-600\";\n      case \"advanced\":\n        return \"text-red-600\";\n      default:\n        return \"text-muted-foreground\";\n    }\n  };\n\n  const formatDifficulty = (difficulty: string) => {\n    if (difficulty === 'tbd') return 'TBD';\n    return difficulty.charAt(0).toUpperCase() + difficulty.slice(1);\n  };\n\n  const getStatusLabel = (status: string) => {\n    switch (status) {\n      case \"available\":\n        return \"Available\";\n      case \"coming_soon\":\n        return \"Coming Soon\";\n      case \"research\":\n        return \"Research\";\n      default:\n        return \"Unknown\";\n    }\n  };\n\n  return (\n    <Card className=\"p-6 hover:shadow-md transition-shadow\" data-testid={`card-state-${guide.slug}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"font-serif text-xl font-bold text-foreground\">\n          {guide.name}\n        </h3>\n        <StateBadge status={guide.status} />\n      </div>\n      \n      <p className=\"font-sans text-muted-foreground mb-4 leading-relaxed text-sm\">\n        {guide.summary}\n      </p>\n      \n      <div className=\"grid grid-cols-2 gap-4 mb-4 text-xs\">\n        <div className=\"flex items-center gap-2\">\n          <Calendar className=\"w-3 h-3 text-primary\" />\n          <span className=\"text-muted-foreground\">{guide.auctions_per_year}</span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <DollarSign className=\"w-3 h-3 text-primary\" />\n          <span className=\"text-muted-foreground\">{guide.type.toUpperCase()} System</span>\n        </div>\n      </div>\n      \n      <div className=\"mb-4\">\n        <div className=\"flex items-center gap-2 text-xs\">\n          <FileText className=\"w-3 h-3 text-primary\" />\n          <span className=\"text-muted-foreground capitalize\">{guide.type} System</span>\n          <span className=\"text-muted-foreground\">•</span>\n          <span className=\"text-muted-foreground\">{guide.format}</span>\n        </div>\n      </div>\n      \n      <div className=\"flex items-center justify-between\">\n        <span className={`font-sans text-xs font-semibold ${getDifficultyColor(guide.difficulty)}`}>\n          {formatDifficulty(guide.difficulty)}\n        </span>\n        {guide.status === \"available\" ? (\n          <Button \n            asChild\n            size=\"sm\"\n            className=\"bg-primary text-primary-foreground font-mono font-semibold hover:bg-secondary transition-colors\"\n            data-testid={`button-read-${guide.slug}-guide`}\n          >\n            <Link href={`/state-guides/${guide.slug}`}>Read Guide</Link>\n          </Button>\n        ) : (\n          <Button \n            size=\"sm\"\n            variant=\"outline\"\n            disabled\n            className=\"font-mono font-semibold\"\n          >\n            {getStatusLabel(guide.status)}\n          </Button>\n        )}\n      </div>\n    </Card>\n  );\n}","size_bytes":3422},"client/src/components/ui/TableOfContents.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\ninterface TOCItem {\n  id: string;\n  title: string;\n  level: number;\n}\n\ninterface TableOfContentsProps {\n  content: string;\n}\n\nexport function TableOfContents({ content }: TableOfContentsProps) {\n  const [tocItems, setTocItems] = useState<TOCItem[]>([]);\n  const [activeId, setActiveId] = useState<string>(\"\");\n\n  useEffect(() => {\n    // Extract headings from MDX content\n    const headingRegex = /^(#{1,6})\\s+(.+)$/gm;\n    const items: TOCItem[] = [];\n    let match;\n\n    while ((match = headingRegex.exec(content)) !== null) {\n      const level = match[1].length;\n      const title = match[2].trim();\n      const id = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n      \n      items.push({ id, title, level });\n    }\n\n    setTocItems(items);\n  }, [content]);\n\n  useEffect(() => {\n    // Set up intersection observer for active section tracking\n    if (tocItems.length === 0) return;\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const visibleEntry = entries.find(entry => entry.isIntersecting);\n        if (visibleEntry) {\n          setActiveId(visibleEntry.target.id);\n        }\n      },\n      { \n        rootMargin: \"-20% 0px -80% 0px\",\n        threshold: 0\n      }\n    );\n\n    // Observe all heading elements\n    tocItems.forEach(item => {\n      const element = document.getElementById(item.id);\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [tocItems]);\n\n  const scrollToSection = (id: string) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  if (tocItems.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card className=\"sticky top-6\">\n      <CardHeader>\n        <CardTitle className=\"font-serif text-lg\">Table of Contents</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <nav className=\"space-y-1\">\n          {tocItems.map((item) => (\n            <button\n              key={item.id}\n              onClick={() => scrollToSection(item.id)}\n              className={`\n                block w-full text-left px-3 py-1 rounded text-sm transition-colors\n                ${item.level > 1 ? `ml-${(item.level - 1) * 4}` : ''}\n                ${activeId === item.id \n                  ? 'bg-primary/10 text-primary font-semibold' \n                  : 'text-muted-foreground hover:text-foreground hover:bg-accent'\n                }\n              `}\n              data-testid={`toc-link-${item.id}`}\n            >\n              {item.title}\n            </button>\n          ))}\n        </nav>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":2823},"client/src/components/ui/TypeTabs.tsx":{"content":"import { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\ninterface TypeTabsProps {\n  value: string;\n  onValueChange: (value: string) => void;\n}\n\nexport function TypeTabs({ value, onValueChange }: TypeTabsProps) {\n  return (\n    <Tabs value={value} onValueChange={onValueChange}>\n      <TabsList className=\"grid w-full grid-cols-5 max-w-2xl mx-auto\">\n        <TabsTrigger value=\"all\" data-testid=\"tab-all\">All</TabsTrigger>\n        <TabsTrigger value=\"deed\" data-testid=\"tab-deed\">Deed</TabsTrigger>\n        <TabsTrigger value=\"lien\" data-testid=\"tab-lien\">Lien</TabsTrigger>\n        <TabsTrigger value=\"hybrid\" data-testid=\"tab-hybrid\">Hybrid</TabsTrigger>\n        <TabsTrigger value=\"verify\" data-testid=\"tab-verify\">To Verify</TabsTrigger>\n      </TabsList>\n    </Tabs>\n  );\n}","size_bytes":790},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}